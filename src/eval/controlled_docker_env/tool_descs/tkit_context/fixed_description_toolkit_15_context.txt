copy_file:copy_file: Duplicate a file to a specified path. Ensure both source and destination are file paths, not directories. Source must exist; destination should not overwrite existing files unless desired. Invoke multiple times for filesystem validation.
file_delete:file_delete: Deletes a file using the absolute or correctly relative path. Ensure paths are complete with directories and extensions. Verify file existence before deletion. Tool can be invoked multiple times to ensure file system integrity. Example: {'file_path':'/full/path/to/file.txt'}.
file_search:file_search: Search files in a subdirectory using shell glob patterns. Parameters: dir_path (precise directory path), pattern (e.g., '*.txt', not regex). Ensure paths match the file structure. Invoke multiple times for validation. Examples: {'dir_path':'01_Projects/02_ProjectB', 'pattern':'*.docx'}.
move_file:move_file: Move or rename a file by specifying existing source_path and valid destination_path. Ensure directories exist and file names are consistent. Use separate invocations for multiple moves to validate system state. Example: {'source_path': 'folder/file.txt', 'destination_path': 'new_folder/file.txt'}.
read_file:read_file: Access files with precise paths and names, including extensions. Validate paths with directory listings or external tools. Avoid vague queries; use exact file names. For example, use 'read_file('path/to/file.txt')'. The tool can be invoked multiple times to reflect file system changes.
write_file:write_file: Write text to supported file types (.txt, .csv, .py) with parameters: file_path (valid path), text (content to write), append (true to add, false to overwrite). Ensure file paths are correct and check permissions. Avoid unsupported formats like .pdf and .docx. Invoke multiple times for state validation.
list_directory:list_directory: Lists files and directories in a specified folder. Use exact directory paths, matching the file system structure. Avoid ambiguous terms or incorrect names. Validate paths before using the tool. Can be invoked multiple times to check file system consistency. Examples: 'list_directory(dir_path="ProjectA/Input")', 'list_directory(dir_path="02_Research/Notes")'.
