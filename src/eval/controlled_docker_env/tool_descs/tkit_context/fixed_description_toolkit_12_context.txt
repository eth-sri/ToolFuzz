copy_file:copy_file: Duplicate a file to a specified path. Parameters: source_path (existing file path), destination_path (target file path). Ensure paths are valid and specify files, not directories. Verify if directories exist. For directories, use separate operations per file or a directory-aware tool. Multiple invocations allow validation of file system state.
file_delete:file_delete: Delete a file by specifying the exact file path using 'delete the file located at [file_path]'. Ensure the file path is complete and valid. Avoid indirect references. The tool can be used multiple times to validate file system state. Example: 'Delete the file located at /path/to/file.txt'.
file_search:file_search: Recursively search for files in a specified subdirectory using Unix shell patterns. Use clear, exact directory paths (avoid spaces; use underscores). Patterns must use shell wildcards like *. Example: {'dir_path':'sub_dir','pattern':'*.txt'}. Validate paths and patterns before use; tool can be invoked multiple times for state verification.
move_file:move_file: Relocate or rename a file by specifying absolute 'source_path' and 'destination_path'. Ensure paths are valid and files exist. For renaming, include the new filename in 'destination_path'. Invoke multiple times for filesystem validation. Example: Move 'source/old.txt' to 'destination/new.txt'.
read_file:read_file: Read a file from disk using 'file_path' as the parameter. Ensure 'file_path' is absolute, includes correct directories, and the exact file name with extension. Validate paths before use to avoid errors. The tool can be invoked multiple times for filesystem state verification. Example: 'file_path': '01_Projects/02_ProjectB/01_Code/main.py'.
write_file:write_file: Save text to a file with parameters: 'file_path': (required) exact location, 'text': (required) content to write, 'append': (optional) true to add, false to overwrite. Ensure file paths are precise. Invoke multiple times to validate file system state.
list_directory:list_directory: Lists files and directories in a specified folder. Use dir_path to specify a clear, valid subdirectory path. Avoid querying for specific files or file types. Verify paths are correct and exist in the directory. Invoke multiple times to validate file system state. Example: {'dir_path': 'ProjectA/Code'}
