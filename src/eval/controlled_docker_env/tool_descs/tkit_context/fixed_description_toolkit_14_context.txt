copy_file:copy_file: Copies a file to a specified location. Parameters: source_path (required, must exist and be a file), destination_path (required, must be a valid file path with the same file type). Paths must be explicit. Validate file system state; invoke tool multiple times if needed. Example: Copy 'file.txt' from '/source/' to '/destination/'.
file_delete:file_delete: Deletes a specified file. Parameters: file_path (required): Absolute path of the file. Ensure the file exists and you have permission to delete. Validate file system state before and after invocation. Invoke multiple times if needed.
file_search:file_search: Recursively search files in a directory using Unix shell wildcards. Parameters: dir_path (Subdirectory without spaces/special characters), pattern (e.g., '*.ext' for file extensions). Validate inputs; invoke multiple times for verification. Examples: {'dir_path':'ProjectA/docs','pattern':'*.md'}.
move_file:move_file: Relocate or rename a file using full paths with filenames. Parameters: source_path (required): Complete path of the file to move. destination_path (required): Complete new file path. Validate paths and filenames before execution. Invoke multiple times for system state checks.
read_file:read_file: Access a file using an absolute path from disk. Parameters: file_path (required, absolute, existing file). Ensure paths are explicit and valid. Tool can be invoked multiple times for file system validation. Examples: read_file('/absolute/path/to/file.txt').
write_file:write_file: Save text to a file with parameters: 'file_path' (required, valid file path), 'text' (required, content to write), 'append' (optional, true to add to existing content). Ensure 'file_path' exists and is valid. Use clear prompts to avoid misinterpretation.
list_directory:list_directory: Lists all contents in the specified directory. Input must be an exact directory path. Does not filter by file type or name. For example, use 'dir_path':'/ProjectA/Code'. Invoke multiple times to check directory state.
