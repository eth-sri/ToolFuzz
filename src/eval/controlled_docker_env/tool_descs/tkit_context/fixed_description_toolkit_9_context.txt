copy_file:copy_file: Duplicate a file by specifying full source and destination paths, including file names and extensions. Both paths must be valid and accessible. This tool only supports file-to-file operations, not directory moves. Run multiple times for validation. Examples: {'source_path': 'dir1/file.txt', 'destination_path': 'dir2/file.txt'}.
file_delete:file_delete: Delete a file by specifying an absolute or valid relative path. Ensure the path exists and you have permission to delete. Validate each request to avoid errors. Example: 'file_delete: /absolute/path/to/file.txt'. Use multiple invocations to check file system state.
file_search:file_search: Search for files in a subdirectory using Unix shell patterns. Ensure 'dir_path' is the exact path without spaces. Use patterns like '*.ext' for extensions. Validate path and pattern correctness. Invoke multiple times for comprehensive checks.
move_file:move_file: Move or rename a file by specifying absolute paths. Use 'source_path' for the current file location and 'destination_path' for the new location or name. Ensure paths are valid. Invoke multiple times for validation. E.g., move_file('src/file.txt', 'dest/file.txt').
read_file:read_file: Access a file using its complete, exact path. Input 'file_path' must match the file system structure precisely. Avoid using ambiguous or descriptive names. Validate paths before use and invoke the tool multiple times to ensure accurate file system state.
write_file:write_file: Save text to a specified file path. Parameters: file_path (required, ensure correct path and extension), text (required, accurate content), append (optional, true if appending). Only use supported types (e.g., .txt, .csv). Validate the file's existence for appending. Invoke multiple times if needed.
list_directory:list_directory: List all files and folders in a specified directory. Only provide the exact directory path; filtering or searching by file type is unsupported. For accurate results, invoke the tool multiple times. Example: {'dir_path':'ProjectA/Code'}. Ensure paths are correct and precise.
