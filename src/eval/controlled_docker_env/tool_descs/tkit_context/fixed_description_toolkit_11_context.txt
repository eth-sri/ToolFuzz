copy_file:copy_file: Duplicate a file to a specified location. Parameters: source_path (valid file path), destination_path (valid path with file name). Ensure files exist and paths are correct before execution. Invoke multiple times for validation.
file_delete:file_delete: Deletes a specified file. Parameters: file_path (required): Absolute or relative path of the existing file to delete. Ensure the path is correct and the file exists. The tool can be invoked multiple times to verify the file system state. Avoid using ambiguous file names or paths.
file_search:file_search: Search for files in a subdirectory using Unix shell patterns. Parameters: dir_path (subdirectory), pattern (e.g., '*.ext'). Use shell wildcards, not regex. Validate patterns for correct syntax. Invoke multiple times for accurate file system validation. Examples: Find '*.txt' in 'folder/subfolder', '*.csv' in 'data'.
move_file:move_file: Move or rename files with absolute paths. Ensure source files exist and destination directories are valid. Specify filenames for renaming. Validate file system states before operations. Tool can be invoked multiple times for thorough validation.
read_file:Read a file from disk using a precise, absolute file path (e.g., '/home/user/project/file.txt'). Ensure the path includes all directory levels and exact file names. Avoid vague references. Invoke multiple times to confirm file existence. Example: {'file_path': '/projects/code/utils.py'}.
write_file:write_file: Save text to disk. Parameters: file_path (string, required) - path to the file; text (string, required) - content to write; append (boolean) - whether to add to an existing file. Validate file paths and content distinctions. Example: {'file_path':'dir/file.txt', 'text':'Hello', 'append':false}. Invoke tool multiple times to check file system state.
list_directory:list_directory: Lists files and directories in a specified folder. Usage: Provide an exact directory path as dir_path, matching the existing structure. Avoid including file types, specific files, or additional context. Example: {'dir_path': 'Projects'}.
