copy_file: Duplicate a file by specifying exact source and destination paths with matching file extensions. Both paths must include complete filenames. Renaming or changing file types is not supported. Validate paths before each use.
file_delete: Delete a file by providing an absolute file path, including the full directory and filename with extension (e.g., /path/to/file.txt). Ensure paths are validated before deletion. The tool can be invoked multiple times for verifying file system state.
file_search: Recursively search files in a subdirectory matching a regex pattern. Parameters: dir_path (subdirectory), pattern (required regex: '*' for any chars, '^' for start, '$' for end, '\' to escape). Validate patterns and paths for accuracy. Invoke multiple times to confirm file system state.
move_file: Relocate or rename a file with these parameters: source_path:required:Path to the file, destination_path:required:Target path (directory or new name). Ensure the destination isn't an existing file. Use the tool multiple times to validate paths.
read_file: Read file contents from a valid path. Parameters: file_path (required) - full path to a readable, supported file. Supported formats: .txt, .docx, .pdf. Avoid unsupported operations like extracting metadata. Invoke multiple times to validate file system changes.
write_file: Save text to a specified file with parameters: file_path (full, valid path), text (content to write), append (true to append, false to overwrite). Ensure directories exist. Use multiple invocations for state verification.
list_directory: Accurately list files and directories within a specified absolute directory path. Use 'dir_path' parameter with valid absolute paths only. Avoid queries about file types or specific contents. Tool can be invoked multiple times for comprehensive checks. Example: {'dir_path': '/your/absolute/path/here'}.
