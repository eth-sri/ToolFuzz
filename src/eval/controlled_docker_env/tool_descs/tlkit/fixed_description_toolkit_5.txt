copy_file: Duplicate a file to a specified path. Ensure source and destination file types match. Provide full, accurate paths. Renaming is allowed within the same file type. Validate paths and permissions. Invoke multiple times for file system checks.
file_delete: Deletes a file using an absolute file path. Ensure the file_path includes the correct file name and extension. Validate the path format and file existence before execution. Use the tool multiple times to confirm the file system state. For example: '/path/to/file.txt'.
file_search: Recursively find files in a directory matching a regex pattern. Use proper regex, not shell globbing. Parameters: dir_path (required): Directory to search. pattern (required): Regex pattern. Example: '^lecture_.*_notes\.pdf$'. Invoke multiple times for accurate results.
move_file: Move or rename a file by specifying the full path for both source and destination. Ensure destination is a directory, not a file. Verify paths exist and don't overwrite files. Invoke multiple times for validation. Examples: Move '/path/file.txt' to '/newpath/'.
read_file: Reads a file from disk using the parameter: file_path (required) - the full path of the existing file. Supports text-based files only. Verify file availability and ensure the path is correct before invoking. The tool can be used multiple times to check the file system state.
write_file: Use this tool to write text to a .txt file on disk. Parameters include file_path (required, .txt only), text (required), and append (true/false). Ensure the file path exists and is valid. Unsupported file types like .pdf and .docx are not allowed. Invoke the tool multiple times to verify file operations.
list_directory: Correctly lists files and directories. Use absolute paths for 'dir_path', ensuring it points to an existing directory. Validate paths before use. Tool can be invoked multiple times for accurate file system state assessment.
