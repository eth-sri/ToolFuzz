copy_file: Duplicate a file from a valid source path to a destination path. Ensure paths exist and maintain file type consistency. Descriptive naming is encouraged. Validate paths with the tool before execution. Invoke multiple times for better validation.
file_delete: Deletes a specified file. Parameters: file_path (required) - an absolute path to an existing file. Only valid file paths are accepted. Ensure correct file paths and existences before invoking. Can be used multiple times for state validation.
file_search: Locate files in a specified subdirectory using simplified Unix shell patterns. Parameters: dir_path (relative path), pattern (e.g., '*.docx', 'report_*'). Avoid full regex syntax; use '*' for any sequence. Can be invoked multiple times for thorough checks.
move_file: Move or rename a file with clear source and destination paths. Ensure paths exist and are files, not folders. Use absolute paths. For renaming, destination path must be in the same directory. Validate paths and state before and after using the tool.
read_file: Access files on disk with parameter: file_path (required, absolute path including extensions). Validate paths for correctness. Tool can be invoked multiple times to confirm file system state. Example: {'file_path': '/path/to/file/document.pdf'}.
write_file: Writes text to disk with parameters: file_path (absolute, required), text (required), append (boolean). Supported formats: .txt. Ensure file exists before appending. Use the tool multiple times to verify file state. Examples: {'file_path': '/path/to/file.txt', 'text': 'Sample text', 'append': true}.
list_directory: Lists all files and directories in a specified directory. Parameters: dir_path (must be an absolute path). Does not list specific subdirectories or file types. Use iteratively for comprehensive checks. Examples: 'dir_path':'/path/to/directory'.
