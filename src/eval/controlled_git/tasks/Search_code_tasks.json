[{"task": "Find and verify the presence of a specific branch in the GitHub repository.", "user_prompt": "Use the tool to search for a branch named 'feature-login' in the repository.", "code_snippet": "assert 'feature-login' in repo.list_branches()"}, {"task": "Search for all open issues in the GitHub repository.", "user_prompt": "Use the tool to search for all open issues in the repository.", "code_snippet": "assert len(repo.list_issues()) > 0"}, {"task": "Search for all open issues in the GitHub repository", "user_prompt": "Please use the tool to search for all open issues in the repository.", "code_snippet": "assert len(repo.list_issues()) > 0"}, {"task": "Find all open pull requests in the GitHub repository.", "user_prompt": "Use the tool to search for all open pull requests in the repository.", "code_snippet": "assert len(repo.list_prs()) > 0"}, {"task": "Add a comment to a specific issue in the GitHub repository", "user_prompt": "Use the tool to search for a specific issue in the GitHub repository and add a comment to it.", "code_snippet": "issue_number = 5  # Assume this is the issue number you want to comment on\nrepo.add_comment(issue_number, 'This is a test comment.')\nassert len(repo.list_comments(issue_number)) == 1"}, {"task": "Find and list all open pull requests in the GitHub repository.", "user_prompt": "Please list all open pull requests in the repository.", "code_snippet": "assert len(repo.list_prs()) >= 0"}, {"task": "Search for a specific issue in the GitHub repository.", "user_prompt": "Use the tool to search for an issue with the title 'Bug in login functionality'.", "code_snippet": "assert any('Bug in login functionality' in issue['title'] for issue in repo.list_issues())"}, {"task": "Check if there is a branch named 'feature-login' in the repository.", "user_prompt": "Search for the branch named 'feature-login' in the repository.", "code_snippet": "assert 'feature-login' in repo.list_branches()"}, {"task": "Find all open issues in the repository", "user_prompt": "Please search for all open issues in the GitHub repository.", "code_snippet": "assert len(repo.list_issues()) > 0"}, {"task": "Search for a specific function definition in the repository.", "user_prompt": "Use the tool to search for the function definition of 'calculateSum' in the repository.", "code_snippet": "assert 'calculateSum' in [function.name for function in repo.search_code('def calculateSum')]"}]