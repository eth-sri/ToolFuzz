[{"task": "Add a comment to an existing issue in the GitHub repository.", "user_prompt": "I need to add a comment to issue number 42 in the GitHub repository. Can you help me with that?", "code_snippet": "issue_number = 42\nrepo.add_comment(issue_number, 'This is a test comment.')\nassert len(repo.list_comments(issue_number)) == 1"}, {"task": "Read the contents of a specific file in the GitHub repository.", "user_prompt": "Use the tool to read the contents of the file 'src/config/settings.json' in the repository.", "code_snippet": "file_path = 'src/config/settings.json'\nfile_contents = tool.read_file(file_path)\nassert file_contents is not None, 'File contents could not be retrieved.'"}, {"task": "Add a comment to a specific issue in the GitHub repository", "user_prompt": "I need to add a comment to issue number 42 in my GitHub repository. Please use the API tool to add the comment 'This is a test comment' to the issue.", "code_snippet": "issue_number = 42\nrepo.add_comment(issue_number, 'This is a test comment')\nassert len(repo.list_comments(issue_number)) == 1"}, {"task": "Read the contents of a specific file in the GitHub repository", "user_prompt": "Please use the GitHub API wrapper tool to read the contents of the file located at 'docs/readme.md'.", "code_snippet": "file_path = 'docs/readme.md'\nfile_contents = tool.read_file(file_path)\nassert file_contents is not None and isinstance(file_contents, str), 'File content should be a non-empty string'"}, {"task": "Read the contents of a specific file in the GitHub repository.", "user_prompt": "Please read the contents of the file located at 'src/utils/helpers.js' in the GitHub repository.", "code_snippet": "file_path = 'src/utils/helpers.js'\nfile_content = tool.read_file(file_path)\nassert file_content is not None, 'File content should not be None'"}, {"task": "Add a comment to a specific issue in the GitHub repository.", "user_prompt": "I would like to add a comment to issue number 42 in my GitHub repository. Please use the GitHub API to achieve this.", "code_snippet": "repo.add_comment(issue_number=42, comment='This is a new comment.')\nassert len(repo.list_comments(42)) > 0"}, {"task": "Add a comment to an open issue in the GitHub repository.", "user_prompt": "I need to add a comment to an issue in my GitHub repository. Can you help me with that?", "code_snippet": "issue_number = 1  # Assuming the issue number is 1\nrepo.add_comment(issue_number, 'This is a comment')\nassert len(repo.list_comments(issue_number)) == 1"}, {"task": "Read the contents of a specific file in the GitHub repository.", "user_prompt": "Please read the contents of the file located at 'docs/README.md' in the repository.", "code_snippet": "file_path = 'docs/README.md'\ncontents = repo.read_file(file_path)\nassert contents is not None and len(contents) > 0"}, {"task": "Read the contents of a specific file from the GitHub repository", "user_prompt": "Please use the tool to read the contents of the file 'src/main.py' in the repository.", "code_snippet": "file_contents = repo.read_file('src/main.py')\nassert file_contents is not None"}, {"task": "Read the contents of a specific file from the GitHub repository.", "user_prompt": "Please read the contents of the file located at 'src/utils/helpers.js' in the repository.", "code_snippet": "file_contents = repo.read_file('src/utils/helpers.js')\nassert file_contents is not None, 'File contents should not be None.'"}]