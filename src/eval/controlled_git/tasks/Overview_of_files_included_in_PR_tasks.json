[{"task": "Review the code changes in a specific pull request and add a comment on any issue found.", "user_prompt": "Please fetch the full text of all files in pull request number 42 to review the code changes. After reviewing, add a comment on any issue found in the code.", "code_snippet": "pr_number = 42\nrepo.list_prs()  # Ensure the PR exists\n# Review the code changes in the files fetched from the PR\ndetected_issue = True  # Assume an issue is detected during review\nif detected_issue:\n    issue_number = 42  # Assuming we comment on the same PR\n    # Add a comment to the PR\n    # repo.add_comment(issue_number, 'Found an issue with the code logic.')\n    # Validate the comment was added\n    assert len(repo.list_comments(issue_number)) == 1"}, {"task": "Review the code changes in a specific pull request and add a comment to it.", "user_prompt": "Please review the code changes in the pull request number 7 and add a comment saying 'Looks good to me!' if the changes are satisfactory.", "code_snippet": "pr_number = 7\npr_files = tool.fetch_pr_files(pr_number)\n# After reviewing the files, add a comment if the changes are satisfactory\ncomment = 'Looks good to me!'\nissue_number = pr_number\nrepo.add_comment(issue_number, comment)\nassert len(repo.list_comments(issue_number)) == 1"}, {"task": "Review the code changes in a specific pull request and add a comment to the PR.", "user_prompt": "Fetch the full text of all files in the pull request with PR number 15. Review the changes and add a comment to the PR if there are any observations or suggestions.", "code_snippet": "pr_number = 15\nfiles_changed = tool.fetch_files_in_pr(pr_number)\n# Assuming a function review_changes(files) that reviews the code changes\nreview_comments = review_changes(files_changed)\nif review_comments:\n    repo.add_comment(pr_number, review_comments)\nassert len(repo.list_comments(pr_number)) > 0"}, {"task": "Add a comment to a pull request to provide feedback on the code changes.", "user_prompt": "Please add a comment to PR #42 to suggest renaming the function 'calculateValue' to 'computeValue' for better readability.", "code_snippet": "repo.add_comment(issue_number=42, comment='Consider renaming the function calculateValue to computeValue for better readability.'); assert len(repo.list_comments(issue_number=42)) == 1"}, {"task": "Add a comment to a specific pull request", "user_prompt": "I want to add a comment to the pull request number 12. Please fetch the full text of all files in the PR so I can review the changes. After reviewing, I will provide the comment text to be added.", "code_snippet": "issue_number = 12\n# Assuming the comment has been added successfully\nassert len(repo.list_comments(issue_number)) == 1"}, {"task": "Fetch the full text of all files in a specific pull request and add a comment to the PR.", "user_prompt": "Please fetch all the files for pull request number 42 and add a comment saying 'Reviewed the changes, looks good.'", "code_snippet": "repo.add_comment(issue_number=42, comment='Reviewed the changes, looks good.')\nassert len(repo.list_comments(issue_number=42)) > 0"}, {"task": "Add a comment to a pull request after reviewing its code changes.", "user_prompt": "I would like to review the code changes in PR number 5 and add a comment to it if necessary.", "code_snippet": "pr_number = 5\n# Assume we fetch and review the PR files here\n# Add a comment to the PR issue\nrepo.add_comment(issue_number=pr_number, comment='Looks good to me!')\nassert len(repo.list_comments(issue_number=pr_number)) == 1"}, {"task": "Review and understand the code changes made in a pull request.", "user_prompt": "Fetch the full text of all files in pull request number 42 to review the code changes.", "code_snippet": "pr_number = 42\nfiles_in_pr = tool.fetch_pr_files(pr_number)\nassert files_in_pr is not None, 'Failed to fetch files from the pull request.'"}, {"task": "Review code changes in a specific pull request and add a comment.", "user_prompt": "Please fetch the full text of all files in pull request number 42 so I can review the code changes. After reviewing, I will add a comment to the PR.", "code_snippet": "assert len(repo.list_comments(42)) == 1"}, {"task": "Review the code changes made in pull request #5 and ensure there are no issues before merging.", "user_prompt": "Please fetch the full text of all files in pull request number 5 to review the code changes.", "code_snippet": "pr_number = 5\nassert pr_number in [pr['number'] for pr in repo.list_prs()], \"PR number not found in the repository.\""}]