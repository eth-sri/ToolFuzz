{"name":"Get_Issues","description":"Get_Issues: Fetch the latest 5 repository issues with titles and numbers. No input needed; simply invoke to receive results. Avoid specifying issue numbers or IDs. Tool can be used multiple times to monitor changes. Examples: 'List recent issues', 'Show latest issue titles'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on when an input is necessary, leading to confusion in prompt syntax and improper argument handling.","how_to_avoid":"Clarify the conditions under which no input is required to prevent incorrect prompt formulation and argument errors.","description":"No input needed unless specific issue ID format is given; otherwise, use an empty string."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comments of a specific issue by providing only the issue number as an integer, e.g., `42`. Do not include any other text, symbols, or phrases. Tool can be invoked multiple times to verify file system state. Example: Input `42` to fetch details for issue 42.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify the need for a numeric input, leading to misinterpretation of input format.","how_to_avoid":"Clarify the need for a numeric input and provide examples to guide correct input formatting.","description":"Provide the issue number as a numeric value, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: To comment on a GitHub issue, provide the issue number as an integer, followed by two newlines, then your comment. Avoid words or symbols for issue numbers. Use sparingly to prevent clutter. Validate input format prior to use.","fields":{"instructions":{"problems_with_current_description":"The current description lacks specific guidance on required formatting, leading to inconsistent input that causes errors.","how_to_avoid":"Specify the exact format for issue numbers and comments to ensure consistent and valid input.","description":"Format instructions precisely: Use numeric issue IDs with '#' prefix and provide a clear comment string."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetches the full text of all files in a pull request (PR) using a single integer as the PR number. Input should be exactly the PR number, e.g., `12`. Avoid additional text, symbols, or prefixes. Can be invoked multiple times for file system state validation.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify that the PR number must be entered as an integer without any prefixes or additional characters.","how_to_avoid":"Clearly state that the PR number must be entered as a plain integer without any prefixes or additional characters.","description":"Provide the PR number as a plain integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a PR using the PR number as an integer input (e.g., 12). Avoid using prefixes like 'PR'. You can invoke the tool multiple times for validation. Example: 'Fetch files from PR 12'.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify that the PR number should always be a numerical integer input and cannot include 'PR' prefix or be written in words.","how_to_avoid":"To avoid failures, explicitly instruct users to provide the PR number strictly as a numerical integer without prefixes or words.","description":"Input the pull request number as a numerical integer only, e.g., 12."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Input format: First line - full file path (no leading slash), second line - file content. Example: 'test/test.txt\\ntest contents'. Validate input format to avoid errors. Invoke multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on necessary formatting details, leading to incorrect input interpretation.","how_to_avoid":"Provide specific guidance on input structure to ensure proper formatting and successful tool usage.","description":"Ensure input follows specified format for accurate processing, including file path and class declaration."}}}
{"name":"Read_File","description":"Read_File: A GitHub API wrapper to read file contents. Input the full file path without a leading slash (e.g., 'some_dir/my_file.py'). Validate paths before use and leverage multiple tool calls for consistent file system checks.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify the format or additional constraints for the file path. Users are unaware of what specific conditions result in 'bad args'.","how_to_avoid":"Clarify any constraints on file path format, such as specific directory structures or naming conventions, and ensure the description addresses these requirements to avoid 'bad args'.","description":"Enter a valid file path relative to the current directory, not starting with a '/', e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update file contents in a GitHub repo. Format: Provide file path (no leading slash), old content 'OLD <<<<'... '>>>> OLD', and new content 'NEW <<<<'... '>>>> NEW'. Follow syntax precisely. Validate inputs before use. Invoke multiple times if necessary for state verification.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity, leading to misinterpretation of the instructions format for updating file contents.","how_to_avoid":"Clarify the instruction format, emphasizing the requirement of specifying both old and new content within delimiters.","description":"Adhere strictly to the format: specify file path, unchanged text, and changes using OLD <<<< old content >>>> OLD NEW <<<< new content >>>> NEW."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete files from a GitHub repository. Input the complete file path as a string without a leading slash, e.g., 'dir/file.py'. Validate paths first, and you can invoke the tool multiple times to ensure correct file deletion.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about the file path format and fails to emphasize that the path should be relative without a leading slash.","how_to_avoid":"Clarify that the file path must be relative to the repository's root, without a leading slash, and ensure users understand this requirement.","description":"Provide the relative file path to delete within the repository, without a leading slash. Example: 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides a comprehensive overview of all files in the main branch, listing their names, paths, and content summaries. It does not support filtering by specific directories. To check specific areas, manually inspect results or run multiple invocations.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on when 'instructions' should be populated, leading to incorrect parsing of certain prompts.","how_to_avoid":"Clarify that 'instructions' should only populate when specific directory details are requested, not general queries.","description":"Populate only when specific directory details are requested; otherwise, leave empty."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch to a repository branch using its exact name as a string parameter. Example usage: 'Set_active_branch: my_branch'. Input must strictly follow this format. The tool can be used multiple times to verify the repository's state.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on expected input format and context, causing mismatches with user prompts and resulting in parsing failures.","how_to_avoid":"Clarify the expected input format and provide context on how the input should relate to user prompts.","description":"Specify the branch name to switch to, using exact text from the prompt."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in the repository. To use, specify the branch name as a single string input parameter. Example: {'instructions': 'my_branch'}. Ensure input is clear and correctly formatted.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on how to interpret 'name of the branch', causing confusion about valid input format.","how_to_avoid":"Clarify that users should provide a branch name in a specific format or with certain characters.","description":"Specify the branch name format, e.g., alphanumeric and underscores, like 'feature_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetches a list of files from a specified directory. Input must be the directory path as a plain string (e.g., 'some_dir/inner_dir'). Avoid extra text or instructions. Can be invoked multiple times for file system validation. Example: 'src'.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly instruct users to provide the directory path explicitly, leading to confusion and missing parameters.","how_to_avoid":"Clarify the need for an explicit directory path in the input to ensure correct parameter extraction.","description":"Enter the exact directory path as a string, e.g., 'some_dir/inner_dir'. Exclude parameter names."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for specific issues or pull requests in a repository. Provide a precise search query string, e.g., 'bug fix' or 'feature request'. Avoid open-ended questions. Invoke multiple times if needed for comprehensive results. Examples: 'Memory leak issue', 'UI enhancement PR'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not clearly specify the expected input format or nature of the search query.","how_to_avoid":"Clarify the input format by specifying that it should be a concise, topic-focused sentence or phrase.","description":"Enter a clear, concise search query related to your issue or topic, e.g., 'Java 11 migration challenges'."}}}
{"name":"Create_review_request","description":"Create a review request on the current branch's open pull request by specifying the GitHub username (e.g., 'username') and instructions. Ensure correct input format. The tool supports multiple invocations for validating file system state.","fields":{"instructions":{"problems_with_current_description":"The current description may not clearly distinguish between valid and invalid usernames, leading to incorrect parsing or understanding of the intended action.","how_to_avoid":"Clarify the requirement for valid GitHub usernames to ensure correct parsing and understanding of the requests.","description":"The GitHub username for the review request, using a valid format, e.g., `username_valid`."}}}
