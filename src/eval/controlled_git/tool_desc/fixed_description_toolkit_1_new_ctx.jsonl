{"name":"Get_Issues","description":"Get_Issues: Fetches the titles and issue numbers of the latest 5 issues from the repository. No input is required. Invoke the tool without any parameters, e.g., ''. For checking updates, invoke multiple times. This tool does not process specific issue queries or IDs.","fields":{"instructions":{"problems_with_current_description":"The description is vague and doesn't clearly convey the purpose of the field.","how_to_avoid":"Use precise language to clearly define the field's purpose and expected input.","description":"No input needed; leave empty (e.g., '')."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetches title, body, and comments of a specific issue. Usage: Provide 'issue number' as a bare integer (e.g., 42). Avoid additional text or symbols. Validates filesystem state with multiple invocations if needed.","fields":{"instructions":{"problems_with_current_description":"Lacks clarity on whether it refers to a specific issue or any integer.","how_to_avoid":"Specify that it must be a specific issue number.","description":"Specify the issue number as a positive integer, e.g., '42'."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue by providing the issue number as an integer (no leading zeros), two newlines, and the comment text. Ensure to follow required formatting. Validate inputs for successful invocation. Example: '5\\n\\nPlease review this feature.'","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks specificity, leading to potential misinterpretation.","how_to_avoid":"Provide clearer guidance on the required formatting to ensure consistent understanding.","description":"Adhere to specified formatting guidelines for consistent data entry."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of all files in a pull request using the PR number as an integer. Input must be a plain integer, e.g., '12'. Tool may be invoked multiple times for validation. Example: 'Fetch files for PR 12.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and context.","how_to_avoid":"Provide a concise, clear description with context.","description":"Enter the pull request number as an integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetches full text of all files in a PR using only the integer PR number as input. Input must be strictly an integer, e.g., 12. Avoid additional text or symbols. Can be invoked multiple times for validation. Examples: Use '12', avoid 'PR 12'.","fields":{"instructions":{"problems_with_current_description":"The current description is ambiguous and lacks clarity on what 'PR' stands for.","how_to_avoid":"Define 'PR' and specify the context, ensuring clarity and precision.","description":"Specify the pull request (PR) number as an integer, e.g., 12."}}}
{"name":"Create_File","description":"Create_File: Use to create a file in a GitHub repo. Input format: 'file_path\\n\\nfile_contents'. 'file_path' must not start with a slash. Example: 'src/main/NewFile.java\\n\\npublic class NewFile {}'. Validate inputs or use multiple invocations for best results.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specificity, leading to potential misunderstandings.","how_to_avoid":"Provide a clear and concise directive for users to follow specific formatting guidelines.","description":"Adhere to specified formatting guidelines for consistency and clarity."}}}
{"name":"Read_File","description":"Read_File: This tool reads the contents of a file via the GitHub API. Provide the full file path without a leading slash (e.g., 'some_dir/my_file.py'). Ensure the path is valid and matches the directory structure. You can invoke the tool multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is not concise and lacks clarity on path format.","how_to_avoid":"Use simpler language and explicitly state the path format requirement.","description":"Specify a relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this GitHub API wrapper to update file contents. Input must follow: specify file path (no leading slash), wrap old content in 'OLD <<<< >>>> OLD', new content in 'NEW <<<< >>>> NEW'. Validate inputs before invocation. Example: 'path/to/file\nOLD <<<<old content>>>> OLD\nNEW <<<<new content>>>> NEW'. Invoke multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The description is vague and does not specify the nature or scope of the rules.","how_to_avoid":"Clarify the scope and importance of the rules to ensure precise compliance.","description":"Adhere exactly to the specified guidelines without deviation."}}}
{"name":"Delete_File","description":"Delete_File: Use this GitHub API wrapper to delete a file by providing its exact path without a leading slash, such as 'dir/file.py'. Ensure input is a plain string. Invoke multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is verbose and has unnecessary details.","how_to_avoid":"Focus on clarity and conciseness, removing redundant information.","description":"Specify the file path to delete, excluding leading slashes."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool gives a high-level overview of all files in the main branch, listing file names, paths, and summaries. It doesn't support specific directory queries. Use general prompts for a complete branch overview. The tool can be invoked multiple times to verify the file system state. No input parameters are needed.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity regarding its purpose.","how_to_avoid":"Clarify the purpose and expected action for users in the description.","description":"Leave empty; no input is required, e.g., an empty string ('')."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch to a specific branch like `git checkout <branch_name>`. Use exact branch names (e.g., `feature_branch`). Avoid synonyms or general terms. Invoke multiple times if needed for consistent repo state.","fields":{"instructions":{"problems_with_current_description":"Vague and lacks context; it's unclear what 'branch' refers to.","how_to_avoid":"Specify that it refers to version control or code repositories.","description":"Specify the branch name in your version control system, e.g., 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in the repository. Input the branch name as a direct string argument, e.g., 'my_branch'. Avoid natural language queries. Examples: 'new_branch_1', 'feature_update'. Invoke multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is too vague and lacks clarity on the field's purpose.","how_to_avoid":"Provide a concise and precise explanation of what the field represents.","description":"Specify the branch name, such as 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Fetches a list of files from a given directory path. Input must be a plain directory path string, e.g., 'dir/subdir'. Do not include filenames or additional instructions. Invoke multiple times to validate directory state.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the input format and purpose.","how_to_avoid":"Provide a concise and clear description specifying the input format and example.","description":"Enter a directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find specific issues or pull requests within a repository. Input must be a precise string query, like 'Issue title: Java 11 migration'. Ensure accuracy by validating against existing data. The tool can be invoked multiple times for thorough search results. Example: 'Bug fix: user authentication'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the expected input format.","how_to_avoid":"Provide a clear example and specify the input format expectations.","description":"Enter a natural language search query, such as a concise issue title or topic."}}}
{"name":"Create_review_request","description":"Create a review request on the open pull request for the current active branch by providing the exact GitHub username as a string (e.g., 'my_username'). Ensure the username is accurate and without special characters or spaces. The tool can be invoked multiple times if needed for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on what is expected.","how_to_avoid":"Provide a concise and clear description specifying the expected input format.","description":"Enter the GitHub username to fetch, e.g., 'my_username'."}}}
