{"name":"Get_Issues","description":"Get_Issues: Fetches titles and numbers of the 5 most recent repository issues. No input required. Cannot retrieve specific issue IDs. Run multiple times for updates. Examples: 'List recent issues', 'Show latest issue titles.'","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not clarify its purpose or usage context.","how_to_avoid":"Make the description concise, specifying that no user input is needed and clarifying its usage context.","description":"No user input needed; leave the field as an empty string."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch title, body, and comments of an issue by providing the issue number as an integer, e.g., `42`. Ensure no additional text or symbols accompany the number. Invoke multiple times if needed for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the required format, assuming prior knowledge.","how_to_avoid":"Clarify the expected format and provide a concise example to ensure understanding.","description":"Input an integer representing the issue number, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue by providing an integer issue number, followed by two newlines, and then your comment. Example: `42\\n\\nThis is my comment.` Avoid using words or symbols instead of numbers for the issue number. The tool can be invoked multiple times for additional checks.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specific guidance.","how_to_avoid":"Provide clear, concise instructions for required formatting.","description":"Adhere strictly to specified formatting guidelines."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of all files in a pull request by specifying the PR number as an integer (e.g., 12). Ensure the input is just the number, without any prefix or suffix. The tool can be invoked multiple times to verify the file system's state. Example: 'Fetch files of PR 3'.","fields":{"instructions":{"problems_with_current_description":"It lacks clarity on what 'PR' stands for and its context.","how_to_avoid":"Define 'PR' and specify its relevance to the tool.","description":"Enter the pull request number as an integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a pull request using an integer PR number as input. Input must be a standalone integer, e.g., '12'. Avoid text prefixes or suffixes. The tool can be invoked multiple times to ensure file system accuracy. Examples: '12', '25'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks context.","how_to_avoid":"Specify the field's purpose and ensure clarity.","description":"Enter the pull request number as an integer, e.g., 12."}}}
{"name":"Create_File","description":"Create_File: Use to create files in a GitHub repo. Input: 'file_path\\n\\nfile_contents'. No leading slash in paths. Example: 'src/main/java/MyClass.java\\n\\npublic class MyClass {}'. Validate paths and contents before invocation. Use multiple times for file system checks.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks guidance on what formatting is required.","how_to_avoid":"Specify detailed formatting guidelines to ensure clarity and consistency.","description":"Adhere to specified format instructions for uniformity and precision."}}}
{"name":"Read_File","description":"Read_File: Access GitHub API to read file contents by providing the exact file path, ensuring no leading slash, e.g., 'some_dir/my_file.py'. Validate paths to avoid errors. Invoke multiple times if needed for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is verbose and unclear about path formatting.","how_to_avoid":"Use concise language and specify the path should be relative.","description":"Provide a relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this GitHub API wrapper to update file contents. Format input as: [file path] (without leading slash), OLD <<<< [old contents] >>>> OLD, NEW <<<< [new contents] >>>> NEW. Validate format before use. Multiple invocations allowed for better file system validation. Example: test/file.txt OLD <<<< old >>>> OLD NEW <<<< new >>>> NEW.","fields":{"instructions":{"problems_with_current_description":"Too vague and lacks clarity.","how_to_avoid":"Be specific about which rules should be followed.","description":"Adhere strictly to all specified guidelines without deviation."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file in a GitHub repository by providing the file path without a leading slash (e.g., 'dir/file.py'). Avoid starting paths with slashes. Invoke multiple times for file state validation. Input must be a string.","fields":{"instructions":{"problems_with_current_description":"It's unclear and verbose, potentially leading to user mistakes.","how_to_avoid":"Simplify and clarify the requirements for the file path input.","description":"Enter a relative file path (no leading slash), e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides an overview of files in the main branch. Specify exact directories or paths for targeted summaries. Use clear instructions like 'specifically in' to guide the query. No input parameters are needed; repeat queries for thorough validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't clearly convey the purpose.","how_to_avoid":"Specify that the field should remain empty and no user input is needed.","description":"Leave this field empty; no user input is required."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in the repository. Specify the exact branch name as a string, e.g., 'main_branch'. Avoid ambiguous terms or incorrect names. Can be invoked multiple times. Examples: {'instructions':'dev_branch'}, {'instructions':'main'}.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't clearly convey that it should be a branch name in a version control system.","how_to_avoid":"Clarify that this field should contain the name of a version control system branch.","description":"Specify the version control branch name, such as 'feature_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Use this tool to create a new branch by explicitly providing the branch name as a string, e.g., \"my_branch\". Avoid conversational prompts. The tool can be invoked multiple times to ensure correct execution.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not clearly convey the purpose or use of the field.","how_to_avoid":"Use specific and concise language to describe the expected input value and its usage context.","description":"Specify the branch name as a string, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetches a list of all files in a specified directory. Input the directory path as a plain string, e.g., 'some_dir/inner_dir'. Do not include extra text or specify a file. Invoke multiple times for validation. Examples: 'src/main/java' or 'src/resources'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity about input expectations.","how_to_avoid":"Provide concise instructions specifying input type and format without unnecessary details.","description":"Enter the directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find specific issues or pull requests in the repository. Input a clear, relevant search string. Example: 'Issue: memory leak' or 'PR: feature update'. Validate inputs and invoke multiple times to ensure accuracy.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks guidance on formulating a search query.","how_to_avoid":"Provide clear instructions on how to create an effective natural language search query.","description":"Enter a concise, natural language search query related to your issue or topic."}}}
{"name":"Create_review_request","description":"Create_review_request: Initiates a review request on the active branch's open pull request. Specify the GitHub username as a string (e.g., 'user_name'). Ensure clarity and correctness in your queries. Invoke multiple times to verify file system state. Examples: 'Request a review from user_name on the active pull request.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity about what the field represents and its format requirements.","how_to_avoid":"Specify that the field accepts a string representing the GitHub user's username.","description":"Enter the GitHub username of the requested user, formatted as a string, e.g., 'my_username'."}}}
