{"name":"Get_Issues","description":"Get_Issues: Fetches the latest 5 issues from the repository, providing titles and issue numbers. No input required. Avoid specifying issue IDs. Use repeatedly for updated issue lists.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity about the field's purpose.","how_to_avoid":"Provide a concise explanation that clearly states the field's requirement.","description":"No input needed; leave the field as an empty string: \"\"."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comment thread of a specified issue by providing the issue number as an integer, e.g., 42. Avoid queries regarding status or priority. Invoke multiple times for validation. Example: 'Get details of issue number 42.'","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on the purpose and format of the field.","how_to_avoid":"Specify the field's purpose and clearly state that it must be an integer.","description":"Enter the issue number as a whole number, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use to comment on a GitHub issue. Format: integer issue number, two newlines, then comment. Example: '3\\n\\nYour comment here'. Avoid leading zeros in numbers.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specific guidance on how to format.","how_to_avoid":"Provide clear, concise instructions with specific formatting requirements.","description":"Adhere to specified format guidelines for clear and consistent content."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch full text of all files in a PR by inputting the integer PR number, e.g., '12'. Avoid extra text. Tool can be invoked multiple times for validating file system state. Example: Input '5' for PR 5.","fields":{"instructions":{"problems_with_current_description":"The original description is too specific and lacks clarity about what 'PR' refers to.","how_to_avoid":"Clarify the context and meaning of 'PR' and ensure it's understood as an identifier.","description":"An integer representing the Pull Request (PR) number, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a pull request by providing only the PR number as an integer (e.g., '12'). Ensure no additional words or phrases are included. The tool can be invoked multiple times to validate file system states. Example: Input '12' to view files from PR 12.","fields":{"instructions":{"problems_with_current_description":"The current description is not clear about what 'PR' stands for.","how_to_avoid":"Clarify that 'PR' refers to 'Pull Request' to prevent ambiguity.","description":"The Pull Request (PR) number as an integer, e.g., '12'."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Input must start with a full file path (no leading slash), followed by two line breaks, then file content. Example: 'src/dir/file.txt\\n\\nfile content'. The tool can be invoked repeatedly for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks specificity and clarity regarding the formatting requirements.","how_to_avoid":"Include precise instructions outlining the exact formatting criteria.","description":"Ensure adherence to specified formatting guidelines."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Input the valid file path without starting with a slash (e.g., 'some_dir/my_file.py'). Verify paths for correctness. Invoke multiple times to check file system state. Examples: 'src/main/java/com/example/servlets/RequestHandler.java'.","fields":{"instructions":{"problems_with_current_description":"Ambiguity regarding path format and lack of clarity on what constitutes a valid path.","how_to_avoid":"Use clear language specifying the requirement for a relative path without a leading slash.","description":"Specify a relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File helps update files in GitHub repos. Format input as: file_path (no leading slash), OLD <<<<old contents>>>> OLD, NEW <<<<new contents>>>> NEW. Validate inputs for adherence. Invoke multiple times for file system state checks.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks specificity regarding the rules.","how_to_avoid":"Clarify what rules should be followed and provide context or examples.","description":"Adhere precisely to the specified guidelines without deviation."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file from a GitHub repository by providing the precise file path as a string without a leading slash, e.g., 'some_dir/my_file.py'. Validate inputs before use, and re-invoke if needed to confirm the file deletion.","fields":{"instructions":{"problems_with_current_description":"The current description is verbose and lacks clarity on the file path format.","how_to_avoid":"Use concise language and specify the format requirements clearly.","description":"Enter the file path to delete, starting without a slash, like 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"The tool provides a general overview of all files in the main branch, listing names, paths, and brief summaries. It does not support directory-specific queries. Use broad queries for complete repository insights. Invoke multiple times to explore different sections. No input parameters required.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the expected input format and purpose.","how_to_avoid":"Provide a concise and clear description specifying that no input is needed.","description":"No input needed; use an empty string, e.g., \"\"."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch to a repository branch using its name, similar to `git checkout <branch_name>`. Input must be the branch name as a standalone string. Example: 'my_branch'. Avoid additional context. Tool can be re-invoked for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and context about what 'branch' refers to.","how_to_avoid":"Specify that it refers to a version control system branch name.","description":"Specify the version control branch name, e.g., 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new repository branch. Specify the branch name as a direct string parameter, e.g., 'my_branch'. Avoid additional text. Example: 'Create_a_new_branch: my_branch'. The tool can be invoked multiple times to validate the file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is ambiguous and lacks clarity about the field's purpose and usage.","how_to_avoid":"Provide a clear and concise description that specifies the field's function and expected input.","description":"Specify the branch name to use, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of files in a specified directory. Input the directory path as a plain string, e.g., 'some_dir/inner_dir'. Do not include file names, extra punctuation, or additional text. The tool can be invoked multiple times for validation. Example: 'src/main/java'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and might confuse users about what input is expected.","how_to_avoid":"Clarify the expected input and provide a more specific example.","description":"Enter a directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for issues and pull requests by providing a concise, specific string related to repository topics, e.g., 'bug fix' or 'feature request'. Avoid open-ended questions. Tool can be invoked multiple times for thorough searching.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the expected input format.","how_to_avoid":"Provide a concise and clear description with specific examples of expected input.","description":"Enter a natural language search query, such as 'issue title' or 'topic'."}}}
{"name":"Create_review_request","description":"Create_review_request: Use this tool to request a review on an open pull request for the current branch. Provide the exact GitHub username as a string (e.g., 'username123'). Ensure the username matches the account format and invoke the tool multiple times if needed. Examples: 'mike_dev', 'code_checker'.","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on what is being requested and might confuse users.","how_to_avoid":"Specify more clearly that it is a username for GitHub, perhaps used for an API call or identification.","description":"Enter the GitHub username for the requested user, e.g., `my_username`."}}}
