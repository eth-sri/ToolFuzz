{"name":"Get_Issues","description":"Get_Issues: Fetches titles and numbers of 5 repository issues without input. Invoke repeatedly for updates. Specific issue queries require external processing. Examples of correct use: 'List issues', 'Fetch latest 5 issues'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and does not provide guidance on permissible input formats, causing confusion.","how_to_avoid":"Clarify the description to indicate no input is necessary and specify the acceptable format.","description":"No input required; use an empty string ('') as the value."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetches the title, body, and comments of a specific issue. **IMPORTANT**: Use an integer to specify the issue number, e.g., 42. Avoid additional text. Example: 'Get_Issue 42'. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the proper format and syntax for referencing issue numbers in prompts.","how_to_avoid":"Specify that issue numbers must be provided as plain integers without additional characters or words.","description":"Specify issue number as a plain integer (e.g., 42) without any prefixes or suffixes."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on GitHub issues. Input must strictly be: an integer issue number, two newlines, then your comment. Correct format is crucial. For example: '4\\n\\nPlease review the new feature.' Use sparingly to avoid clutter. Reinvoke for state validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity, leading to incorrect prompt formatting and agent invocation failures.","how_to_avoid":"Specify the exact format instructions, emphasizing correct issue number representation and necessary prompt structure.","description":"Adhere to specified formatting: use numeric issue identifiers and clear, concise prompts."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetches the full text of all files in a pull request using an integer PR number as input. Input must be a standalone integer, e.g., '12'. Ensure correct input format to avoid errors. Tool can be invoked multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify the correct input format, causing misinterpretations and failures when users provide PR numbers in various formats.","how_to_avoid":"Clarify that the PR number should be input as a plain integer without any prefixes or additional text.","description":"Enter the pull request number as a plain integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"Fetch the full text of all files in a pull request by providing the PR number strictly as an integer, e.g., 12. Avoid any prefixes or additional text. This tool can be invoked multiple times for updated file system states. Examples: Input '12' to get files for PR 12.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify that the PR number should be a standalone integer, leading to errors in recognizing the input in various prompt formats.","how_to_avoid":"Specify that the PR number must be entered as a standalone integer without any additional text or prefixes.","description":"Enter the PR number as a standalone integer (e.g., 12) without any prefixes or additional text."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repo. Input must start with the file path (no leading slash), followed by file contents after a newline. Example: 'test/test.txt\n\ntest contents'. Validate inputs and invoke multiple times to ensure state. Incorrect formatting or leading slashes cause failures.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on specific formatting requirements, leading to inconsistent prompt results.","how_to_avoid":"Provide detailed formatting guidelines to ensure consistency in the instructions field.","description":"Ensure instructions are formatted as file path followed by content, separated by two newlines."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Provide a valid file path without a leading slash, e.g., 'some_dir/my_file.py'. Validate paths beforehand. The tool can be invoked multiple times for comprehensive validation of the file system state. Example: 'src/main/java/MyClass.java'.","fields":{"instructions":{"problems_with_current_description":"The description doesn't specify what constitutes a valid path, leading to incorrect file path inputs.","how_to_avoid":"Clarify requirements for valid path inputs, ensuring users understand the correct path format.","description":"Specify the relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: A GitHub API wrapper to modify file contents. Specify the file path (no leading slash), and wrap old and new content with OLD <<<< >>>> OLD and NEW <<<< >>>> NEW, respectively. Validate input format before execution. Example: 'test/test.txt\nOLD <<<<\nold content\n>>>> OLD\nNEW <<<<\nnew content\n>>>> NEW'.","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on how to format file modification instructions specifically.","how_to_avoid":"Provide specific guidance on formatting instructions for file modification, including placeholders for paths and changes.","description":"Precisely format file modification instructions: specify file path, unchanged text, old content, and new content."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file from a GitHub repository by providing the file path, like 'dir/file.py', without a leading slash. Validate paths before use. The tool supports multiple invocations to check file existence.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about the expected input format, leading to misunderstandings regarding file paths.","how_to_avoid":"Clarify that the input should be a relative file path within a GitHub repository, without a leading slash.","description":"Enter the relative file path to delete, starting without a slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool offers a complete overview of all files in the main branch, listing names, paths, and brief content summaries. It cannot target specific directories. Invoke multiple times for a comprehensive view. Usage requires no input parameters.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify when to leave the instructions field empty or what constitutes an acceptable input.","how_to_avoid":"Clarify that the instructions field should be empty unless specific directory details are requested in the prompt.","description":"Leave empty unless specific directory details are requested, e.g., `Provide details about the directory.`"}}}
{"name":"Set_active_branch","description":"Set the active branch in a repository by specifying the exact branch name as a string, akin to git checkout <branch_name>. Ensure the input is a valid branch name. This tool can be invoked multiple times to reflect repository changes accurately.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly convey that the input should be the exact name of the branch to switch to.","how_to_avoid":"Clarify that the input must be the exact name of the branch you want to switch to, without any additional context or commands.","description":"Exact branch name to switch to, such as 'main' or 'dev_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Use this tool to create a new branch in the repository by specifying the branch name as a single string input parameter. Ensure the input is formatted as 'Create_a_new_branch('branch_name')' with no additional text. Invoke multiple times for state validation. Example: Create_a_new_branch('feature_branch').","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the format and purpose of 'branch name', leading to misinterpretation.","how_to_avoid":"Specify the expected format and provide examples to guide users on how to correctly input branch names.","description":"Specify the branch name to be created, such as 'feature_branch_7'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of files in a given directory by providing its path as a string. Input must be a valid directory path only, e.g., 'some_dir/inner_dir'. Avoid additional text. Tool can be invoked multiple times to validate file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about the need for a directory path input, leading to incorrect or empty instructions.","how_to_avoid":"Clarify that only the directory path should be provided as a string, without any additional instructions or context.","description":"Input only the directory path as a string, e.g., 'some_dir/inner_dir', no additional text."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search repository issues and pull requests. Input a clear, specific search query as a string, e.g., 'issue title'. Avoid vague queries. Invoke multiple times for refined results. Example: 'Bug in login feature'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not clearly define the expected input format, leading to incorrect or unrecognized queries.","how_to_avoid":"Specify that the input should be a concise, clear search query reflecting the issue's title or main topic.","description":"Enter a clear and concise search query, such as the issue title or main topic."}}}
{"name":"Create_review_request","description":"Create_review_request: Initiate a review request for the current branch's open pull request by specifying the GitHub username as a string input. Example: 'Ask \"mike_dev\" to review the pull request.' Ensure the username is valid and the branch has an open pull request. The tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on specifying a valid GitHub username format, leading to failures in parsing prompts correctly.","how_to_avoid":"Use a description that clearly indicates a valid format for GitHub usernames to ensure accurate parsing.","description":"Enter a valid GitHub username, ensuring it follows correct formatting, e.g., 'username123'."}}}
