{"name":"Get_Issues","description":"Get_Issues: Fetches the titles and numbers of the first 5 issues in a repository. This tool requires no input and does not support querying specific issues by ID or number. Invoke multiple times for updated issue lists. Example: Simply call Get_Issues to retrieve the latest issues.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the expected input format, leading to misinterpretation and incorrect prompts.","how_to_avoid":"Clarify that an empty string is the only valid input, ensuring users understand no additional input is needed.","description":"No input required; use an empty string (``) as the sole input format."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comments of a specific issue by providing the issue number as an integer, e.g., `42`. Avoid using words or symbols like `issue number` or `#`. Repeat invocation to validate file system state.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't specify a clear format for input, leading to varied and incorrect interpretations in prompts.","how_to_avoid":"Specify exact input format and constraints, such as using '#' before the integer for issue numbers.","description":"Provide the issue number as an integer with a preceding '#', e.g., '#42'."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue. Input format: [Issue Number (integer)]\\n\\n[Your Comment]. Ensure the issue number is purely numeric. The tool can be invoked multiple times for system state validation. Example: '5\\n\\nPlease review the code.'","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on the required format, leading to incorrect prompt structure and invocation failures.","how_to_avoid":"Clearly specify the required format for issue references and comments to prevent misinterpretation and errors.","description":"Format instructions to correctly reference issues and structure comments."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of all files in a pull request by specifying the PR number as an integer (e.g., '12'). Ensure the input is an integer only. This tool helps understand code changes or contribute to a PR. The tool can be invoked multiple times for validation. Example: 'Fetch files from PR 12'.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't specify the exact format or phrasing needed to extract the PR number, leading to parsing errors.","how_to_avoid":"Clarify that the PR number should be extracted as a standalone integer without any prefixes or additional text.","description":"Extract the PR number as a standalone integer, e.g., '12', from the input."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch full text of all files in a PR using an integer PR number. Input must be a single integer (e.g., `12`). Avoid additional text or prefixes. Can be invoked multiple times for validation. Example: Use `12` for PR 12.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and fails to specify that only numeric input (integers) is acceptable for the PR number, causing input format errors.","how_to_avoid":"Specify that the PR number must be a numeric value and cannot include non-numeric characters or formats like 'PR' or words.","description":"Enter the pull request number as a numeric integer only, e.g., `12`."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repo. Input format: 'path/to/file.txt\\n\\nfile contents'. Ensure the path doesn't start with a slash. Use multiple invocations to check the file system. Examples: 'src/MyClass.java\\n\\npublic class MyClass {}'","fields":{"instructions":{"problems_with_current_description":"The description lacks specific guidance on formatting, leading to incorrect argument structure.","how_to_avoid":"Clearly specify the file path and class declaration format required for successful tool usage.","description":"Provide the exact file path and class structure as formatted instructions."}}}
{"name":"Read_File","description":"Read_File: Use this GitHub API wrapper to read file contents. Provide paths relative to the repository root without leading slashes or 'src/' prefix. For example: 'main/java/com/example/servlets/RequestServlet.java'. Invoke multiple times for consistent filesystem validation.","fields":{"instructions":{"problems_with_current_description":"The current description fails to specify that the path should include directory hierarchy and filename without leading slashes.","how_to_avoid":"Clarify that the path must include directory hierarchy and filename without leading slashes for correct input.","description":"Specify the relative file path with directory hierarchy and filename, excluding leading slashes, e.g., `some_dir/my_file.py`."}}}
{"name":"Update_File","description":"Use Update_File to modify file contents in a GitHub repo. Input format: 'file_path\nOLD <<<< old_content >>>> OLD\nNEW <<<< new_content >>>> NEW'. No leading slashes in paths. Validate inputs before use. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on the format and structure required for input, leading to incorrect or missing arguments.","how_to_avoid":"Provide a clear, structured format for input, specifying placeholders for old and new text changes.","description":"Adhere to specified format: file path, unchanged text, followed by OLD and NEW markers with content changes."}}}
{"name":"Delete_File","description":"Delete_File: A GitHub API tool to delete files by specifying their path as a string. Input the file path directly, e.g., 'some_dir/my_file.py', avoiding slashes at the start. Avoid additional context or queries in the prompt. Reinvoke to verify file deletion.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about the input format, causing confusion between file paths and instructions.","how_to_avoid":"Clarify that only file paths are accepted and provide examples specifically indicating input format.","description":"Input the relative file path to delete, without a leading slash, as a string, e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool lists all files in the main branch, detailing their paths and contents. It does not accept directory-specific queries. For complete repository insights, run the tool as needed. Avoid specifying subdirectories in prompts.","fields":{"instructions":{"problems_with_current_description":"The current description allows for additional instructions, causing incorrect argument parsing.","how_to_avoid":"Clarify that the field must remain empty to avoid erroneous input.","description":"This field must be left empty; no instructions are required."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in a repository like `git checkout <branch_name>`. Input must be the branch name as a string, e.g., \"feature_branch\". Avoid natural language or questions. Invoke multiple times for consistent file system validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on its purpose and fails to convey that the field expects specific branch action instructions.","how_to_avoid":"Clarify that the field should contain explicit branch change instructions or actions, not just the branch name.","description":"Specify the action to switch or change to a branch, using its exact name."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Use this tool to create a new branch in the repository. **IMPORTANT**: Provide the branch name as a plain string in the 'instructions' parameter, e.g., `my_branch`. Avoid additional context. Tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is too vague, leading to misinterpretation of what 'name of the branch' refers to in the context of creating branches.","how_to_avoid":"Clarify that this field should contain the exact name of the branch to be created without additional context or questions.","description":"Specify the exact branch name to create, such as `my_branch`."}}}
{"name":"Get_files_from_a_directory","description":"Fetch a list of files from a specified directory. Input must be a plain directory path string, e.g., 'some_dir/inner_dir'. Exclude files and extra text. Use multiple invocations for comprehensive validation.","fields":{"instructions":{"problems_with_current_description":"The description is too vague, leading to incorrect input formats and misunderstandings about expected output.","how_to_avoid":"Clarify that the input should strictly be a directory path string without additional text or context.","description":"Provide only the directory path as a string, e.g., 'some_dir/inner_dir'. Avoid additional text or instructions."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find issues and pull requests in a repository by providing a clear, concise string query. Format example: 'bug fix login'. Avoid full sentences. For accurate results, invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't clearly define the format or purpose of the input.","how_to_avoid":"Specify the input format and clarify it should be a concise query or topic title.","description":"Enter a concise title or topic for your issue as a natural language query."}}}
{"name":"Create_review_request","description":"Create_review_request: This tool creates a review request on the open pull request of the current active branch. Specify the exact, case-sensitive GitHub username of the reviewer as a string input, e.g., 'username'. Invoke the tool multiple times to validate the file system state. Examples: 'Request review from exact_user123', 'Add exactReviewer to review current PR'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the expected format or pattern for the GitHub username, leading to inconsistent input handling and failures.","how_to_avoid":"Specify the expected format for the GitHub username clearly, including potential patterns or naming conventions to guide user input.","description":"Enter the GitHub username in lowercase letters and underscores only, e.g., `user_name`."}}}
