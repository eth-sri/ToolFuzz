{"name":"Get_Issues","description":"Get_Issues: This tool fetches the latest 5 issues from a repository, returning their titles and issue numbers. It requires no input. Do not specify issue IDs; the tool retrieves them automatically. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description is vague, leading to incorrect input assumptions and bad args.","how_to_avoid":"Clarify that no user input or parameters are needed for execution.","description":"No input or parameters needed; use an empty string: ``."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch title, body, and comments of a specific issue. Input strictly requires an integer issue number, e.g., 42. Avoid natural language and ensure input is formatted correctly. Tool may be invoked multiple times for validation. Example: Get_Issue(42).","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on the required format, leading to invalid inputs with non-numeric or improperly formatted issue identifiers.","how_to_avoid":"Specify that only numeric issue identifiers without prefixes or additional text are acceptable, ensuring input is an integer.","description":"Provide issue number only as a numeric integer, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use to comment on a GitHub issue. Input must start with an integer issue number, two newlines, then the comment. Incorrect formats include non-integer issue numbers and improper spacing. Example: '3\\n\\nPlease update to Java 11.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on specific formatting rules, leading to improper command structure and invocation failures.","how_to_avoid":"Specify precise syntax rules and example command structures for correct field formatting.","description":"Ensure commands adhere to specified format: include exact issue numbers and actions."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of files in a PR by inputting the PR number as a standalone integer (e.g., '12'). Avoid prefixes like '#', 'PR', or 'pull request'. This tool can be invoked multiple times for consistent file state validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify how to properly format the PR number, leading to incorrect input formats and invocation failures.","how_to_avoid":"Clarify the format by explicitly indicating the required syntax for the PR number, such as using only digits without any prefixes or additional characters.","description":"Enter the pull request number as a plain integer without any prefixes, e.g., '5'."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetches full text of all files in a pull request using an integer PR number. Input must be a standalone integer, e.g., '12'. Avoid prefixes like 'PR'. Can be invoked multiple times to check file system state. Examples: 'List files in PR 12.'","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clearly specify the expected input format, leading to confusion and incorrect input parsing.","how_to_avoid":"Clarify that the input should be a numeric value representing the pull request number, without any additional text or characters.","description":"Enter the pull request number as a plain integer (e.g., 12), without any prefix or additional text."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Input must be: 1) Full file path (no leading slash), 2) Double newline, 3) File contents. Example: 'dir/file.txt\\n\\nfile contents'. Invoke multiple times if needed for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks guidance on the required formatting style, leading to inconsistent outputs.","how_to_avoid":"Specify the expected format clearly, including structure and syntax, to ensure consistency.","description":"Provide precise formatting instructions for consistent and correct output generation."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Provide a full file path without a leading slash (e.g., 'some_dir/my_file.py'). Validate paths for correctness. For robust usage, invoke the tool multiple times to ensure file system consistency.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify that the path should be relative without leading or trailing slashes.","how_to_avoid":"Specify the path should be relative, without leading or trailing slashes, and provide examples.","description":"Enter a relative file path without leading or trailing slashes, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use to modify a file's content in a GitHub repo. Specify file path (no leading slash), wrap old content with 'OLD <<<<' and '>>>> OLD', and new content with 'NEW <<<<' and '>>>> NEW'. Validate inputs for correctness. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the format and structure required for input instructions.","how_to_avoid":"Specify the required format, including filename, unchanged text, and OLD/NEW content markers.","description":"Provide instructions using filename, unchanged text, and OLD/NEW content markers."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file from a GitHub repo by providing the full file path as a plain string without a leading slash, e.g., 'some_dir/my_file.py'. Validate inputs and repeat tool usage to confirm file system changes. Examples: 'src/main/java/File.java'.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't enforce the requirement of specific phrasing for successful processing, leading to inconsistent input handling and failures.","how_to_avoid":"Clarify the need for a specific prompt structure to ensure the file path is recognized correctly by the tool.","description":"Enter the file path to delete, starting without a slash. Use phrasing: 'delete [file_path] from GitHub repository'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"Use this tool to get a complete overview of all files in the main branch, listing file names, paths, and content summaries. It does not support directory-specific queries. Invoke it multiple times for different sections if needed. No input parameters are required; use an empty string to activate.","fields":{"instructions":{"problems_with_current_description":"The current description does not provide clarity on expected input format, leading to incorrect prompt processing.","how_to_avoid":"Specify that instructions should include specific directory details to ensure proper argument generation.","description":"Specify directories or folders for detailed content overview."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active repository branch. Use a single string for the branch name, e.g., 'main'. Avoid additional context. Example: 'Set_active_branch: main'. The tool can be invoked multiple times to validate repository state.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify that it expects a command or action for branch switching, not just the branch name.","how_to_avoid":"Clarify the description to instruct users to provide a command or action related to switching branches.","description":"Provide the command or action to switch to the specified branch, e.g., 'checkout my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in a repository. Use the 'instructions' parameter to specify the branch name as a string, e.g., 'my_branch'. Ensure the branch name is the sole content of the parameter. The tool can be invoked multiple times for validation. Example: {'instructions': 'feature_update_6'}.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the required input format and does not guide users on how to specify branch names correctly.","how_to_avoid":"Clearly specify that the input should only be the desired branch name enclosed in backticks, without additional text or commands.","description":"Provide only the desired branch name enclosed in backticks, e.g., `new_feature_branch`."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of files in a specified directory. Input must be a clean directory path as a string, e.g., 'some_dir/inner_dir'. Avoid file paths, additional instructions, or extraneous text. Validate the path to confirm the directory exists. The tool can be invoked multiple times for comprehensive checks.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly specify how to extract or format the directory path from user input, leading to incorrect arguments.","how_to_avoid":"Clarify that the string should be a direct directory path extracted from user input without additional text or punctuation.","description":"Extract the exact directory path as a string, e.g., 'some_dir/inner_dir', without any additional text."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for issues and pull requests in a specific repository. Provide a clear, specific query string related to issue titles or topics. Ensure relevance to the repository context. Examples: 'Bug in login feature', 'Update README'. Tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity, leading to misinterpretation of input format and purpose.","how_to_avoid":"Provide a clear and concise description, specifying the expected input format and purpose.","description":"Enter a concise topic or issue title for natural language search."}}}
{"name":"Create_review_request","description":"Create_review_request: This tool creates a review request on the current branch's open pull request. Provide the GitHub username as a string input (e.g., 'username') and clear instructions for the review request. Avoid indirect phrasing and ensure precise username matching. The tool can be invoked multiple times for better validation. Example: 'Request a review from \"username\" on the current branch.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on acceptable username formats, causing mismatches with actual GitHub usernames.","how_to_avoid":"Clarify that the username must match the GitHub account's exact username format, without any prefixes or suffixes.","description":"Exact GitHub username, e.g., 'username123', avoiding prefixes/suffixes like 'dev_' or '_reviewer'."}}}
