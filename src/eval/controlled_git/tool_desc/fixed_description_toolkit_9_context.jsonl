{"name":"Get_Issues","description":"Get_Issues: Fetch the latest 5 repository issues, returning their titles and numbers. No input required. Note: The tool does not fetch specific issues by ID. Use multiple invocations for updated issue lists. Example: 'Fetch the latest issues.'","fields":{"instructions":{"problems_with_current_description":"The current description is too vague and does not clarify how to handle prompts that result in 'bad args None'.","how_to_avoid":"Ensure prompts explicitly reference 'ticket ID' when querying for issue titles, aligning with successful examples.","description":"No input needed; ensure prompts use 'ticket ID' for issue title queries."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comment thread of an issue by specifying the issue number as an integer only, e.g., `42`. Avoid additional text or symbols in the input. Validate numerically before use. The tool can be invoked multiple times to ensure consistency.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify the required format for issue numbers, leading to varied and incorrect input interpretations.","how_to_avoid":"Specify that issue numbers must be entered as plain integers without any prefix or suffix.","description":"Enter the issue number as a plain integer, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to add comments to GitHub issues. Input must be strictly formatted: an integer issue number, followed by two newlines, then the comment. Adhere to this format to avoid errors. Example: '3\\n\\nUpdate to Java 11?'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on accepted formatting for issue numbers, leading to parsing errors.","how_to_avoid":"Specify clear guidelines for formatting issue numbers numerically without leading zeros or words.","description":"Ensure issue numbers are formatted numerically without leading zeros or words."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch all file texts from a PR by providing the PR number as a plain integer, e.g., '12'. Input should be strictly numeric without additional text. The tool can be invoked multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify the expected format clearly, leading to incorrect input parsing and invocation failures.","how_to_avoid":"Specify that the PR number must be input as a standalone integer without additional characters or formatting.","description":"Enter the PR number as a standalone integer (e.g., 12)."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Retrieve full text of all files in a pull request by entering an integer PR number only, e.g., '12'. Avoid prefixes like 'PR' or spelled-out numbers. Tool can be invoked multiple times for state validation. Correct examples: '8', '15'.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify that the PR number should be input as a plain integer, without any prefixes like 'PR'.","how_to_avoid":"Clarify that only the numeric part of the pull request is required, without any additional text or prefixes.","description":"Enter the pull request number as a plain integer, without any prefixes or additional text, e.g., '12'."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Input must be formatted with a file path (no leading slash) followed by two newlines and the file contents. Validate input format before execution. Example: 'path/to/file.txt\\n\\nfile contents'. You can invoke the tool multiple times for better file system state validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on formatting specifics, leading to ambiguous instructions.","how_to_avoid":"Provide clear guidelines on file path and content structure to ensure correct formatting.","description":"Specify the exact file path and content format requirements."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Provide a relative file path without a leading slash, e.g., 'some_dir/my_file.py'. Ensure paths are valid and invoke multiple times to check file system state. Correct usage avoids errors.","fields":{"instructions":{"problems_with_current_description":"The description is unclear about the required format of the file path, leading to incorrect inputs with paths starting with a slash.","how_to_avoid":"Clarify that the file path must be relative and not begin with a slash, ensuring users provide correct input.","description":"Enter a relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update a file in a GitHub repository. Input must include a full file path (no leading slash), old content in OLD <<<< >>>> OLD, and new content in NEW <<<< >>>> NEW. Follow syntax strictly. Use multiple invocations for better validation. Example: 'test/test.txt OLD <<<< old >>>> OLD NEW <<<< new >>>> NEW'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity, leading to incorrect formatting and missing elements in instructions.","how_to_avoid":"Provide a clear format for instructions, including placeholders for file paths and content changes.","description":"Adhere strictly to formatting: file path, unchanged text, 'OLD <<<<' old content '>>>> OLD', 'NEW <<<<' new content '>>>> NEW'."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file in a GitHub repository. Input must be the full file path string, e.g., 'some_dir/my_file.py', without a leading slash. Validate paths before use. Tool can be invoked multiple times for system state verification.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify the exclusion of paths starting with 'src/' for deletion, leading to incorrect inputs.","how_to_avoid":"Specify that paths starting with 'src/' should not be included in the input for deletion.","description":"Provide a file path without starting with 'src/', e.g., 'some_dir/my_file.py'. Only input a string, not the param name."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool lists all files in the main branch, including paths and summaries. It cannot filter by specific directories or paths. To use, simply request an overview of the main branch. The tool can be invoked multiple times to verify the file system state. Example: 'What files exist in the main branch?'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the specific input format or structure needed for successful execution.","how_to_avoid":"Clarify the required format or structure for inputs to prevent misinterpretation and improve accuracy.","description":"No input needed; provide a specific summary or overview request in a clear and structured format."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch repository's active branch using `branch_name` as a required string input. Example: {'instructions':'feature_branch'}. Ensure exact branch name input. Tool can be invoked multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The description is unclear about the expected input format, leading to confusion about valid branch names and instructions.","how_to_avoid":"Specify that the input should directly state the branch name exactly as it appears in the repository.","description":"Specify the exact branch name from the repository, e.g., 'main', 'dev_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in the repository. Input only the branch name as a string without additional text, e.g., 'my_branch'. Ensure prompts are concise and verify input correctness. Invoke the tool multiple times if needed for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on required formatting or constraints, causing confusion and incorrect input handling.","how_to_avoid":"Specify the required format or constraints for branch names to ensure proper input and prevent errors.","description":"Specify the branch name format, e.g., lowercase, underscores only: `my_branch_name`."}}}
{"name":"Get_files_from_a_directory","description":"Fetch a list of files in a specified directory by providing the directory path as a plain string without extra text. Example: 'src/main/java'. Ensure the path is valid. The tool can be invoked multiple times to validate the file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is ambiguous, causing confusion between directory paths and actions like listing or counting files.","how_to_avoid":"Clarify that the input should be a directory path without actions or instructions, focusing solely on the path string.","description":"Provide a directory path as a string, e.g., 'some_dir/inner_dir', without including actions or parameter names."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find issues and pull requests by specifying a precise search query as a string. Example: 'bug fix' or 'add feature'. Avoid vague queries. The tool can be used multiple times for comprehensive checks.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the expected format or context of the query.","how_to_avoid":"Specify the expected context and format for the search query to guide users effectively.","description":"Enter a concise search query related to your issue, such as a specific question or problem statement."}}}
{"name":"Create_review_request","description":"Create_review_request: Generates a review request for an open pull request on the active branch. Input must include the GitHub username as a single string, e.g., 'username123'. Ensure no spaces or special characters. Tool can be invoked multiple times to confirm state. Example: Request a review from 'user_dev'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on how to correctly specify the GitHub username in different contexts.","how_to_avoid":"Ensure the description specifies that the username should match the format used in the examples to avoid confusion.","description":"Enter the exact GitHub username of the user for whom the request is made, e.g., `my_username`."}}}
