{"name":"Get_Issues","description":"Get_Issues Tool: This tool retrieves a list of issues from a specified repository. It returns the title and issue number of the first 5 issues in the repository. Usage Instructions: The tool does not require any input parameters. To use the tool, simply invoke it without any arguments. Limitations: The tool will only fetch the first 5 issues from the repository's issue list and does not provide any additional issue details such as description, labels, or status. Ensure that the repository from which issues are being fetched is accessible and that the tool has the necessary permissions to access it.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear and lacks context on when the field is used.","how_to_avoid":"Provide a concise and clear explanation of the field's purpose and usage.","description":"Field requires no user input; leave as an empty string for default functionality."}}}
{"name":"Get_Issue","description":"Get_Issue: This tool retrieves detailed information about a specific issue from a repository. It provides the issue's title, body content, and the entire comment thread. To use this tool, you must input the issue number as an integer. Input format: {\"issue_number\": integer}. For example, {\"issue_number\": 42}. The tool will not accept non-integer inputs or strings. Ensure the issue number corresponds to a valid issue in the repository. This tool does not support fetching multiple issues simultaneously. Use it for one issue at a time to get accurate results.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity regarding the type and format expected.","how_to_avoid":"Provide a concise description indicating the type and example format explicitly.","description":"Enter the issue number as a whole number, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue Tool: This tool is designed to facilitate commenting on GitHub issues. To use this tool correctly, follow the input formatting rules strictly to ensure successful execution. The input must be structured as follows: \n\n1. Specify the issue number as an integer. This identifies the GitHub issue you wish to comment on. \n\n2. Insert exactly two newline characters after the issue number. This is crucial for separating the issue number from the comment content. \n\n3. Provide your comment text, which must adhere to these parameters: \n   - instructions:required: Your comment must follow the required formatting guidelines. \n\nUse this tool thoughtfully to avoid cluttering comment threads. Incorrect formatting may result in failed operations or unintended outcomes. Adhering to these guidelines ensures your comments are posted correctly and efficiently.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks details on specific formatting requirements.","how_to_avoid":"Clearly specify the exact formatting guidelines users need to follow.","description":"Adhere to specified formatting guidelines precisely."}}}
{"name":"List_open_pull_requests__PRs_","description":"The 'List Open Pull Requests (PRs)' tool retrieves a list of open pull requests from a specified repository. It returns the title and PR number of up to 5 open pull requests. This tool does not require any input from the user; simply activate it to receive the information. Note that the output is limited to 5 entries, so it may not reflect the total number of open pull requests if there are more than 5. Ensure that the repository is accessible and has open pull requests for this tool to function correctly.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity regarding its purpose or context.","how_to_avoid":"Use precise language to clearly define the purpose and usage of the field.","description":"No input needed; leave the field as an empty string."}}}
{"name":"Overview_of_files_included_in_PR","description":"Overview_of_files_included_in_PR Tool: This tool retrieves the full text of all files associated with a specific pull request (PR) in a repository. To use this tool correctly, follow these instructions: \n1. Input Requirements: You must provide the PR number as an integer. For example, if the PR number is 12, you should input '12'. Ensure that the PR number is valid and corresponds to an existing pull request in the repository.\n2. Functionality: Once the PR number is provided correctly, the tool will fetch and return the complete text of all files included in that PR. This allows you to review code changes or contribute to the PR effectively.\n3. Restrictions: Only integer input for the PR number is allowed. Strings, decimals, or any other data types will not be accepted and may cause errors. Ensure the PR number is accurate and exists in the target repository. \nBy adhering to these instructions, you can effectively utilize the tool without encountering translation or usage errors.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on what 'PR number' refers to.","how_to_avoid":"Specify the context and purpose of the 'PR number' for better clarity.","description":"Specify the pull request number as an integer, e.g., 12."}}}
{"name":"Create_Pull_Request","description":"Create_Pull_Request: This tool facilitates the creation of a new pull request in a GitHub repository. **IMPORTANT**: To use this tool correctly, adhere strictly to the following input format rules:\n\n1. Begin with the title of the pull request on the first line.\n2. Follow the title with exactly two newline characters.\n3. Provide the body or description of the pull request after the newlines.\n4. If applicable, reference any relevant issues in the body using the syntax `closes #<issue_number>`, separating multiple issues with commas (e.g., `closes #3, closes #6`).\n\nExample: To create a pull request titled 'README updates' with the body 'added contributors' names, closes #3', format the input as follows:\n\n```\nREADME updates\n\nadded contributors' names, closes #3\n```\n\nEnsure all instructions are followed precisely to avoid errors.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks detail on what formatting is required.","how_to_avoid":"Specify the exact formatting requirements and provide examples if necessary.","description":"Ensure compliance with specified formatting guidelines."}}}
{"name":"List_Pull_Requests_Files","description":"List Pull Requests Files Tool: This tool retrieves the full content of all files in a specified pull request (PR). It is useful for reviewing or contributing to code changes. To use this tool correctly, follow these guidelines: \n1. Input Requirement: Provide the PR number as a single integer. Ensure that it is a valid and existing PR number in your repository. \n2. Input Format: The PR number must be entered as an integer without any additional characters or spaces, e.g., `12`. \n3. Usage Example: To fetch files from PR number 45, input the number 45. \n4. Restrictions: Only integer inputs are allowed. Do not input strings, special characters, or invalid PR numbers. \n5. Error Handling: If an invalid PR number is provided, the tool will not return results. Please verify the PR number before inputting. \nBy adhering to these instructions, you can effectively use the tool to access PR file contents.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and context about what 'PR' stands for.","how_to_avoid":"Specify 'PR' as 'Pull Request' and mention its purpose or use.","description":"The Pull Request (PR) identifier as an integer, e.g., '12'."}}}
{"name":"Create_File","description":"Create_File Tool: This tool is a wrapper for the GitHub API, designed to facilitate the creation of files in a GitHub repository. To use this tool correctly, follow these instructions precisely: \n\n1. **File Path Specification**: You must begin by specifying the full file path where the new file will be created. The path must not start with a slash. For example, use 'foldername/filename.txt' instead of '/foldername/filename.txt'.\n\n2. **File Contents Specification**: After specifying the file path, provide the contents of the file. Ensure that the contents are on a new line immediately following the file path.\n\n3. **Input Format**: The input must be a single string with the file path on the first line and the file contents on the second line. No additional formatting or characters are allowed.\n\nExample: To create a file named 'test.txt' in a 'test' directory with the contents 'test contents', format your input as follows:\n\n'test/test.txt\\n\ntest contents'\n\nBy following these instructions, you ensure proper file creation within your GitHub repository using this tool.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on what formatting is required.","how_to_avoid":"Specify the exact formatting requirements and provide clear, concise instructions.","description":"Adhere strictly to specified formatting guidelines."}}}
{"name":"Read_File","description":"Description: This tool is a wrapper for the GitHub API, designed to read the contents of a specified file within a repository. To use this tool correctly, follow these instructions: \n\n1. **File Path Format**: Provide the full file path of the desired file. The file path must be relative to the root of the repository and must NOT start with a slash. For example, use `some_dir/my_file.py` instead of `/some_dir/my_file.py`.\n\n2. **Parameter Requirement**: The 'instructions' parameter is mandatory and should contain the file path as described above.\n\n3. **Usage Limitations**: Ensure the file path is valid and corresponds to an existing file in the repository. The tool cannot read directories or non-existent files.\n\nBy adhering to these guidelines, you can effectively use the tool to access file contents without encountering translation errors.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on path requirements.","how_to_avoid":"Clarify path format and emphasize not starting with a slash.","description":"Specify a file path without leading slash, e.g., 'directory/file.py'."}}}
{"name":"Update_File","description":"Update_File Tool: This tool interfaces with the GitHub API to update the contents of a file in a GitHub repository. To use this tool correctly, your input must strictly follow these rules:\n\n1. **File Path Specification:**\n   - Begin with specifying the file to be updated by providing its full path. **Do not** start the file path with a slash ('/').\n   - Example: 'test/test.txt'\n\n2. **Old Content Specification:**\n   - Identify the existing content you wish to replace. This must be encapsulated within `OLD <<<<` and `>>>> OLD` markers.\n   - Example: `OLD <<<<\\nold contents\\n>>>> OLD`\n\n3. **New Content Specification:**\n   - Define the new content to replace the old content, encapsulated within `NEW <<<<` and `>>>> NEW` markers.\n   - Example: `NEW <<<<\\nnew contents\\n>>>> NEW`\n\n4. **Sample Input Format:**\n   - For a file located at 'test/test.txt', to replace 'old contents' with 'new contents', your input should look like this:\n     ```\n     test/test.txt\n     This is text that will not be changed\n     OLD <<<<\n     old contents\n     >>>> OLD\n     NEW <<<<\n     new contents\n     >>>> NEW\n     ```\n\nEnsure all inputs are correctly formatted as described above to avoid errors. Failure to do so may result in unsuccessful file updates.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specificity.","how_to_avoid":"Use clear and concise language to specify the importance of adherence.","description":"Adhere strictly to the specified guidelines."}}}
{"name":"Delete_File","description":"Delete_File Tool: This tool facilitates the deletion of a file in a GitHub repository using the GitHub API. To use this tool correctly, you must provide the full file path of the file you wish to delete, ensuring that the path does not start with a slash. For example, if you want to delete a file named 'my_file.py' located in a directory 'some_dir', the input should be 'some_dir/my_file.py'. The input should be a plain string representing the file path, without additional parameters or names. Ensure the file path is accurate and formatted correctly to avoid errors.","fields":{"instructions":{"problems_with_current_description":"The current description is not concise and may confuse users about the syntax and input requirements.","how_to_avoid":"Simplify the description, clearly state input requirements, and provide an exact example.","description":"Enter the relative file path to delete, e.g., 'some_dir/my_file.py'. Do not start with a slash."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"Overview_of_existing_files_in_Main_branch: This tool generates a comprehensive list of all existing files in the main branch of a repository. It outputs the file names, their directory paths, and a brief summary of each file's contents, aiding in the understanding of repository structure, especially in large codebases. No input is required to use this tool; simply invoke it to receive the overview. Note that the tool is limited to the main branch and will not provide information on other branches or any changes not yet committed to the main branch.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not clearly convey that no action or input is needed.","how_to_avoid":"Use concise language to explicitly state that no input or action is required.","description":"No action needed; leave the field blank."}}}
{"name":"List_branches_in_this_repository","description":"The 'List_branches_in_this_repository' tool retrieves and provides a list of all branch names within the current repository. This tool does not require any input parameters or additional instructions to operate. To use this tool, simply invoke it without providing any input, as it is designed to function with an empty string as a placeholder for input. It is important to note that the tool solely lists branch names and does not perform any other actions or modifications to the repository. Ensure that the tool is used in environments where repository access permissions allow for branch listing.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on what is expected for the field.","how_to_avoid":"Provide a concise definition specifying that the field should be left empty.","description":"Leave this field empty; no input is necessary."}}}
{"name":"Set_active_branch","description":"The Set_active_branch tool allows you to change the active branch in a repository. It mimics the functionality of the `git checkout <branch_name>` and can also create a new branch if needed, akin to `git switch -c <branch_name>`. To use this tool correctly, you must provide the branch name as a string input parameter. For example, to switch to a branch named 'feature_branch', input 'feature_branch' as the parameter. Ensure the branch name is a valid string without any spaces or special characters that are not allowed in branch names. Do not include additional commands or options within the input string. This tool does not handle branch creation if the branch already exists, nor does it support checking out to branches with complex refspecs. Incorrect usage may lead to errors or unexpected behavior.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and does not specify the format or purpose of the branch name.","how_to_avoid":"Specify the expected format and usage context to provide clearer guidance for users.","description":"Specify the branch name to use, such as 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in a specified repository. **IMPORTANT**: You must provide the branch name as a single string input. The branch name must adhere to your version control system's naming conventions. Input format: { \"instructions\": \"branch_name\" }. Example: { \"instructions\": \"feature/new-feature\" }. Constraints: The branch name should not contain spaces or special characters (other than hyphens or underscores), and it should not be an empty string. Ensure the name is unique within the repository to avoid conflicts.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the context and purpose of the field.","how_to_avoid":"Specify the field's purpose and provide context for better understanding.","description":"Specify the branch name for version control, such as 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory Tool: This tool is designed to retrieve a list of all files located within a specified directory. To use this tool correctly, please adhere to the following instructions: \n\n1. Input Format: You must provide the path of the directory as a string. \n2. Parameter Requirement: Only input the directory path as a string without including any parameter name. \n3. Example Usage: If you wish to fetch files from 'some_dir/inner_dir', input the path exactly as 'some_dir/inner_dir'. \n\nPlease ensure that the directory path is correctly formatted and accessible. This tool does not support additional parameters or formats; only a single string input is required.","fields":{"instructions":{"problems_with_current_description":"Current description is vague and lacks clarity on the expected input format.","how_to_avoid":"Specify that the input should be a directory path string without parameter names.","description":"Enter a string representing a directory path, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: This tool allows you to search for issues and pull requests within a repository using a specified search query. IMPORTANT: You must provide the search query as a string input parameter. The search query should be a natural language phrase encapsulated in quotation marks, for example, 'My issue title or topic'. Ensure the query is relevant to the repository's content for effective results. Avoid using complex expressions, special characters, or multiple topics in a single query. The tool is designed to process one simple, clearly defined query at a time.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specific guidance on the input format or intention.","how_to_avoid":"Provide clear guidance on input expectations and purpose to ensure user queries align with functionality.","description":"Enter a natural language search query to specify your issue title or topic."}}}
{"name":"Create_review_request","description":"Create_review_request: This tool is designed to create a review request for an open pull request associated with the current active branch. To use this tool correctly, you must provide the GitHub username of the individual you wish to request a review from. The username must be supplied as a string input parameter. \n\nUsage Instructions:\n1. Ensure there is an open pull request linked to the current active branch.\n2. Identify the GitHub username of the person you want to request a review from.\n3. Input the username as a string, for example, 'my_username'.\n4. Execute the tool with the specified username.\n\nImportant Constraints:\n- The username must be a valid GitHub username.\n- Only one username should be provided per request.\n\nFollowing these instructions will ensure the tool operates correctly and efficiently.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the context and purpose of the GitHub username.","how_to_avoid":"Provide specific context on why the GitHub username is needed and how it will be used.","description":"Specify the GitHub username for the requested user, for identification or access purposes."}}}
