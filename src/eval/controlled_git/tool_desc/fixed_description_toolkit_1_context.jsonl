{"name":"Get_Issues","description":"Get_Issues: Fetches the titles and numbers of 5 recent repository issues without needing any input. Do not provide issue IDs. Use this tool repeatedly to monitor changes. Example: 'List the latest issues.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and context, leading to incorrect or empty arguments in prompts.","how_to_avoid":"Provide clear and concise instructions for expected input format to guide users in crafting correct prompts.","description":"No input is needed; use an empty string (`' '`) to indicate no arguments."}}}
{"name":"Get_Issue","description":"Get_Issue: Retrieve the title, body, and comments of a specific issue by specifying its number as an integer. Only provide the number, e.g., '42'. Incorrect formats like '#42' or 'issue number 42' will fail. Use multiple invocations if needed.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly specify that the input should be strictly an integer and not include any text or symbols.","how_to_avoid":"Ensure inputs are strictly numerical without any prefixes, text, or symbols (e.g., use '42' instead of '#42' or 'issue number 42').","description":"Provide the issue number as a plain integer, without any symbols or text."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue. Input must be: integer issue number (no leading zeros), two newlines, then your comment. Validate format strictly. Tool can be used multiple times for state checks. Example: '5\\n\\nPlease review.'","fields":{"instructions":{"problems_with_current_description":"Prompts fail due to improper formatting and lack of clarity on required structure.","how_to_avoid":"Ensure prompts strictly follow the specified issue number format and clear instructions.","description":"Ensure prompts adhere to required issue number format: '#<number>'."}}}
{"name":"Overview_of_files_included_in_PR","description":"Overview_of_files_included_in_PR: Fetch full text of files in a pull request using the PR number as a plain integer, e.g., 7. Avoid using '#', 'PR', or any non-numeric text. The tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on expected input format, causing misinterpretation of 'PR number' in prompts.","how_to_avoid":"Define the input as a plain integer without additional formatting or labels like 'PR number' or 'pull request'.","description":"Provide the PR number as a plain integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch full text of files in a PR using an integer PR number as input. Input must be a digit-only number, e.g., 12. Avoid using text or 'PR' prefixes. Invoke multiple times for consistency. Examples: '12', '5'.","fields":{"instructions":{"problems_with_current_description":"The current description is not clear about formatting and fails to specify that only numerical input is acceptable.","how_to_avoid":"Specify that only numerical PR identifiers without extra text or symbols are accepted as input.","description":"Enter the pull request number as a plain integer (e.g., 12)."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Input must include a file path without a leading slash, followed by two line breaks, then the file contents. Example: 'path/to/file.txt\n\nfile contents'. Invoke multiple times to validate the file system state.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on formatting requirements, leading to misinterpretations and incorrect outputs.","how_to_avoid":"Specify exact formatting and content structure to ensure correct understanding and implementation.","description":"Provide precise formatting and structure instructions for successful task execution."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read a file's content via the GitHub API by providing a relative file path, e.g., 'some_dir/my_file.py'. Paths must not start with a slash. Validate paths accordingly. Invoke multiple times for state checks.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify that paths should not include directory separators, causing confusion.","how_to_avoid":"Specify that file paths should be relative and not include directory separators.","description":"Enter a relative file path without leading slashes or directory separators, e.g., `some_dir/my_file.py`."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update file contents in a GitHub repository. Input format: specify the file path (no leading slash), wrap old contents in OLD <<<< and >>>> OLD, and new contents in NEW <<<< and >>>> NEW. Example: 'test/test.txt' followed by content changes. Invoke the tool multiple times if needed to ensure correct file state.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on expected format, leading to incorrect argument parsing.","how_to_avoid":"Specify the exact format for changes and emphasize the need for concise, structured instructions.","description":"Provide precise file paths and clearly formatted changes, using 'OLD' and 'NEW' markers for replacements."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file from a GitHub repository by providing the full file path without a leading slash (e.g., 'dir/file.py'). Input must be a plain string. You can invoke this tool multiple times to validate file system state. Examples: 'src/java/File.java', 'docs/readme.md'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on usage context, causing confusion between file path input and operational context like GitHub repos.","how_to_avoid":"Clarify that the input must strictly be the file path without context of external systems like GitHub.","description":"Provide the relative file path to delete, excluding any leading slash or external system context."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool lists file names, paths, and summaries of contents in the main branch. Specify target directories clearly, e.g. 'Provide details for src/main/java'. Avoid vague terms like 'inside'. Repeat usage for comprehensive checks. No input parameters are required.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear, causing confusion about whether input is needed, leading to incorrect argument formatting.","how_to_avoid":"Clarify that no input or specific instructions are necessary to ensure correct argument processing.","description":"Leave blank; no input is necessary for this field."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch to a specified branch in your repository, equivalent to `git checkout <branch_name>`. Input must be the branch name as a string, e.g., 'my_branch'. Validate by verifying branch existence. The tool can be invoked multiple times for confirmation.","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on branch context, leading to misinterpretation of commands and resulting in failures.","how_to_avoid":"Clarify the need for a specific branch name and context to ensure accurate command interpretation.","description":"Specify the branch name to switch to, such as 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Use this tool to create a new branch in the repository. Input the branch name as a string parameter labeled 'instructions'. Example: {'instructions': 'my_branch'}. Repeat invocation for better file system validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not clearly specify the expected format for branch names, leading to failures.","how_to_avoid":"Specify that the branch name must be a valid identifier, using only alphanumeric characters and underscores, without spaces or special characters.","description":"Enter a valid branch name using only letters, numbers, and underscores (e.g., my_branch). No spaces or special characters allowed."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetches a list of files from a specified directory. Input must be the directory path as a plain string, e.g., 'some_dir/inner_dir'. No additional text is allowed. Invoke multiple times for validation. Examples: 'src/main/java' or 'src/'.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear and does not explicitly guide users to include directory paths directly.","how_to_avoid":"Clarify that only the directory path should be input as a string, without any additional text or formatting.","description":"Input the exact directory path as a string, e.g., 'some_dir/inner_dir', without additional text or labels."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for issues or pull requests in the repository. Input a specific, repository-related query string, e.g., 'bug fix' or 'feature request'. Ensure queries are concise and relevant. Invoke multiple times for comprehensive results.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't clarify that a specific, concise search query is needed, leading to ambiguous interpretations.","how_to_avoid":"Specify that the input should be a clear, concise search query related to a particular issue or topic.","description":"Enter a specific, concise search query related to your issue or topic, e.g., 'Challenges with switching to Java 11'."}}}
{"name":"Create_review_request","description":"Create_review_request: Create a review request on the open pull request for the current active branch. Specify the exact GitHub username as a string, e.g., 'username123'. Avoid prefixes like 'dev_' or 'developer_'. Invoke multiple times for file system validation. Example: 'Request review from username123 on current branch's pull request.'","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly specify that the GitHub username should not include underscores and should be in the format of 'name_role'.","how_to_avoid":"Clarify the expected format for the GitHub username by emphasizing that it should follow the 'name_role' pattern without underscores.","description":"Specify the GitHub username in 'name_role' format without underscores, e.g., 'mike_dev'."}}}
