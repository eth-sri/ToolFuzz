{"name":"Get_Issues","description":"Get_Issues: Fetches the title and number of 5 issues from a repository. No input is required. The tool can't process individual issue queries; it returns a fixed list. Use multiple invocations to refresh data. Examples: 'Fetch issues', 'List issues'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't clarify the importance of specific terminology for successful parsing.","how_to_avoid":"Specify the required keywords and format for inputs to ensure correct parsing and avoid failures.","description":"Ensure input uses 'ticket ID' for successful parsing; no input required, e.g., `` (empty string)."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch title, body, and comments of an issue using its number as a standalone integer (e.g., 42). Avoid text/symbols around the number. For best results, invoke the tool multiple times to validate file system state. Example: 'Get details of issue 42.'","fields":{"instructions":{"problems_with_current_description":"Current description does not clearly specify the format requirement that the issue number must be an integer.","how_to_avoid":"Specify that the issue number must be entered as an integer without any additional text or symbols.","description":"Enter the issue number as a standalone integer, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue by providing an integer issue number, two newlines, and the comment. Strictly follow this format to avoid errors. Example: '3\\n\\nYour comment here.' Invoke multiple times for better validation. Avoid non-integer issue numbers and ensure consistent format usage.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not specify the required formatting, leading to incorrect input.","how_to_avoid":"Specify exact formatting rules, such as valid issue number formats and response structures.","description":"Ensure input adheres to prescribed format, including exact issue number and structured response."}}}
{"name":"Overview_of_files_included_in_PR","description":"To use the Overview_of_files_included_in_PR tool, input the PR number as a standalone integer, e.g., `12`. Avoid adding text, symbols, or prefixes like 'PR#'. Ensure input is strictly an integer. This tool fetches full text of all files in a pull request, useful for understanding code changes. Invoke multiple times for validation. Example: Input `12` for PR number 12.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify the format required, leading to incorrect input parsing.","how_to_avoid":"Clearly specify that the input should be only an integer without any additional characters or symbols.","description":"Enter the PR number as a plain integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetches the full text of all files in a pull request using a precise integer for the PR number. Input must be an integer, e.g., '12', without extra text. Example: 'Fetch files for PR 12'. Tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify how to correctly format the pull request number, leading to incorrect input parsing.","how_to_avoid":"Specify the expected format for the pull request number to ensure accurate and consistent input recognition.","description":"Provide the pull request number as a numeric value without any prefixes, e.g., '14'."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Provide a full file path (not starting with '/') and file contents, separated by two newlines. E.g., 'src/main/NewFile.java\n\nclass NewFile{}'. Invoke multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the specific format needed for successful tool execution.","how_to_avoid":"Specify the exact format required, emphasizing file path and class declaration structure.","description":"Provide file path and class structure in separate lines for correct formatting."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Provide a full file path without a leading slash, e.g., 'some_dir/my_file.py'. Validate file paths before execution and use the tool repeatedly for state checks.","fields":{"instructions":{"problems_with_current_description":"The description doesn't specify the requirement that file paths should start with a directory name and not be absolute.","how_to_avoid":"Clarify that the path must start with a directory name, not a slash or be an absolute path.","description":"Specify a relative file path starting with a directory name, not an absolute path."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update file contents in a GitHub repo. Input must be structured: specify file path (no leading slash), old content 'OLD <<<<...>>>> OLD', new content 'NEW <<<<...>>>> NEW'. Validate delimiters and structure. Invoke multiple times for accuracy. Example: 'path/to/file OLD <<<<old>>>> OLD NEW <<<<new>>>> NEW'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity on the format and structure required for successful execution.","how_to_avoid":"Provide clear formatting guidelines and examples to ensure inputs meet the expected structure.","description":"Adhere to strict input format: specify file path, unchanged text, and clearly delineated old and new content sections."}}}
{"name":"Delete_File","description":"Delete_File: This tool deletes a specified file in a GitHub repo using its path without a leading slash, e.g., 'dir/file.py'. Verify the file exists before deletion. Invoke multiple times for file state validation. Example usage: 'some_dir/my_file.py'.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly specify the context or constraints related to GitHub repositories, leading to confusion in user input.","how_to_avoid":"Specify that paths must relate to files in a GitHub repository and clarify any constraints about input format and context.","description":"Specify the relative path of the file to delete from a GitHub repository, without starting with a slash. Only input as a string."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides an overview of all files in the main branch, listing names, paths, and summaries. It does not support directory-specific queries. For detailed analysis, use multiple invocations. No input is needed.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on when to provide an empty string or specific instructions, leading to incorrect argument generation.","how_to_avoid":"Clarify when to use an empty string versus detailed instructions to ensure correct argument mappings.","description":"Use an empty string when no specific instructions are needed; otherwise, provide clear details."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in a repository using an exact branch name as a string, similar to 'git checkout <branch_name>'. Ensure the branch exists. Example: {'instructions': 'develop'}. Repeat for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is too vague and does not specify that it should be a branch name entered as a command string.","how_to_avoid":"Clarify the description to indicate explicitly that it refers to a specific command string for a branch name.","description":"Specify the branch name as a command string, e.g., 'git checkout my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create a new branch by providing the branch name directly as a string, e.g., `create_branch('my_branch')`. Avoid natural language questions or statements. The tool checks for valid branch name formatting and can be invoked multiple times to ensure file system state consistency. Examples: `create_branch('feature_x')`, `create_branch('update_2023')`.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the expected format or constraints for the branch name, causing misunderstanding and invocation failures.","how_to_avoid":"Clarify the expected format and constraints for branch names, ensuring users provide valid input that meets these criteria.","description":"Specify the branch name exactly as required, using only allowed characters and format."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Enter the directory path as a plain string, e.g., 'some_dir/inner_dir'. Avoid additional text or questions. The tool can be invoked multiple times to validate file system state.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly instruct users to input only the directory path as a string, leading to confusion.","how_to_avoid":"Specify that only the directory path should be entered as a string without additional text or instructions.","description":"Enter the directory path as a string, e.g., 'some_dir/inner_dir', without additional text."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for issues and pull requests by providing a specific search string in quotes, e.g., 'bug fix' or 'feature request'. Avoid general questions or natural language queries. Validate inputs and re-invoke for updated repository states.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity, leading to incorrect query input formats that result in failures.","how_to_avoid":"Provide a clearer description that specifies the expected format and structure of the search query.","description":"Enter a concise, clear search query related to your issue or topic, such as 'Challenges in switching to Java 11.'"}}}
{"name":"Create_review_request","description":"Create_review_request: Initiates a review request on the open pull request for the active branch. Specify the GitHub username as a string (e.g., 'username') and provide a review instruction. Validate input and repeat if necessary. Example: {'username':'code_checker','instructions':'Please review the current pull request.'}","fields":{"instructions":{"problems_with_current_description":"The current description fails to specify that the username should follow a particular pattern or format.","how_to_avoid":"Clarify the expected format and pattern for the GitHub username to ensure consistent input.","description":"GitHub username in snake_case format for review requests, e.g., `my_username`."}}}
