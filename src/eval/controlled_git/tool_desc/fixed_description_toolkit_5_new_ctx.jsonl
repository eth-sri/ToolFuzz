{"name":"Get_Issues","description":"Get_Issues: Fetches titles and numbers of the latest 5 repository issues. No input is needed. Avoid specifying issue IDs. Use multiple invocations for updated results. Example: 'List the latest issues.'","fields":{"instructions":{"problems_with_current_description":"Ambiguity in context and lack of clarity on what 'empty string' means.","how_to_avoid":"Clearly specify that no user input is expected or required.","description":"No user input expected; leave the field as an empty string."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetches the title, body, and comment thread of a specific issue. To use, specify only the issue number as a clean integer, like `42`. Avoid additional text or symbols. Example: To fetch issue 42, input `42`.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on what 'issue number' refers to.","how_to_avoid":"Specify that the integer represents a unique identifier for a specific issue.","description":"Unique issue identifier as an integer, e.g., '42'."}}}
{"name":"Comment_on_Issue","description":"Use Comment_on_Issue to add comments to GitHub issues by specifying the issue number as an integer, followed by two newlines, then your comment. Ensure correct format to avoid errors. Invoke the tool multiple times for consistent state validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity.","how_to_avoid":"Provide specific details on the expected format.","description":"Ensure adherence to specified formatting guidelines."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of files in a pull request using only the PR number as an integer (e.g., 12). Avoid prefixes like 'PR' or symbols like '#'. Invoke the tool multiple times if needed for consistent results. Example: Input '7' for PR number 7.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity regarding its context and usage.","how_to_avoid":"Provide a concise description that specifies the purpose and context of the PR number.","description":"Integer representing the Pull Request (PR) number, e.g., '12'."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files fetches the full text of all files in a PR. Input the PR number as a sole integer, e.g., '12'. Avoid adding text like 'PR' or 'pull request'. Invoke multiple times for file system state validation. Example: To fetch files for PR 5, input '5'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and context about what 'PR number' refers to.","how_to_avoid":"Specify that 'PR number' refers to a Pull Request identifier.","description":"Enter the Pull Request (PR) identifier as an integer, e.g., 12."}}}
{"name":"Create_File","description":"Create a file in a GitHub repository using the GitHub API. Input must include the file path (without leading slash), followed by two newlines and the file content. Example: 'dir/file.txt\\n\\nFile content'. Validate inputs for correct format and invoke multiple times for filesystem consistency.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks guidance on specific formatting requirements.","how_to_avoid":"Provide clear, concise formatting instructions to ensure consistent adherence.","description":"Adhere to specified format requirements for consistency and clarity."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Provide a relative file path without 'src/main/' or leading slashes (e.g., 'java/com/example/servlets/RequestListener.java'). Validate paths before invoking; the tool supports multiple invocations for state validation.","fields":{"instructions":{"problems_with_current_description":"The description is vague about the format and lacks clarity on the 'no leading slash' requirement.","how_to_avoid":"Specify that the path should be relative and clarify the 'no leading slash' rule.","description":"Relative file path without leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Update a GitHub file's content. Use format: [file_path] without leading slash. Wrap old content with 'OLD <<<<' and '>>>> OLD', new content with 'NEW <<<<' and '>>>> NEW'. Validate format and invoke tool multiple times for state checks. Example: 'test/test.txt\nOLD <<<<\nold contents\n>>>> OLD\nNEW <<<<\nnew contents\n>>>> NEW'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague, lacking clarity on the context and purpose of the rules.","how_to_avoid":"Specify the context and ensure the rules' purpose is clear and concise.","description":"Adhere explicitly to the specified guidelines without deviation."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file in a GitHub repository via the GitHub API. Input the full file path as a plain string without a leading slash, e.g., 'some_dir/my_file.py'. Ensure correct format adherence. The tool may be invoked multiple times to verify the file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is wordy and may confuse users about the input format.","how_to_avoid":"Use concise language and clearly specify the requirements for input.","description":"Specify the file path to delete, without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool lists all files in the main branch, their paths, and content summaries. It doesn't support specific directory queries. Use only for whole branch overviews. Invoke multiple times for consistent validation.","fields":{"instructions":{"problems_with_current_description":"The description is vague and does not clearly indicate that the field should be left empty.","how_to_avoid":"Specify that the input should be left blank and use concise language.","description":"Leave input blank; use an empty string ('')."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in a repository, similar to `git checkout <branch_name>`. Specify the exact branch name as a string, e.g., `main`. Validate against existing branches. Repeat invocation for accurate state. Examples: 'Set to `dev`', 'Switch to `feature_branch`'.","fields":{"instructions":{"problems_with_current_description":"The description is vague and doesn't clarify the purpose or usage of the field.","how_to_avoid":"Provide a concise explanation that specifies the field's role in context.","description":"Specify the target branch name, e.g., 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in the repository. Specify the branch name as a single string input, e.g., 'my_branch'. Avoid additional phrasing. The tool can be invoked multiple times for file system validation. Example: 'Create_a_new_branch(\"feature_update\")'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity, making it difficult to understand its purpose.","how_to_avoid":"Provide a clear and concise description specifying that it's for specifying a branch name in version control systems.","description":"Specify the version control branch name, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of all files in a specified directory. Input only the directory path as a plain string, e.g., 'some_dir/inner_dir'. Do not include additional text or instructions. Ensure the path is valid and points to a directory. Use this tool multiple times for thorough file system validation.","fields":{"instructions":{"problems_with_current_description":"The original description is vague and lacks clarity on the input format.","how_to_avoid":"Specify that the input should be a directory path string without additional details.","description":"Provide a directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for issues and pull requests in a repository. Input a specific, relevant search query as a string. Example: 'bug in authentication module'. Queries must relate directly to repository content. The tool can be invoked multiple times for comprehensive checks.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specificity about what the field represents.","how_to_avoid":"Use specific language to clarify the purpose and format of the search query.","description":"Enter a natural language search query, such as an issue title or topic."}}}
{"name":"Create_review_request","description":"Create a review request on an open pull request matching the current branch. Provide a valid GitHub username as a string parameter. Avoid vague queries; specify the username directly. The tool can be invoked multiple times for validation. Example: {'username':'dev_name'}.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on the purpose and format of the input.","how_to_avoid":"Specify clearly that the input should be the user's GitHub username.","description":"Enter the GitHub username of the user, e.g., 'my_username'."}}}
