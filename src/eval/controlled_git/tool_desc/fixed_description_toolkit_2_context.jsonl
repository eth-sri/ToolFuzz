{"name":"Get_Issues","description":"Get_Issues: Fetches the titles and numbers of the latest 5 issues from the repository. No input is allowed; do not attempt to query specific issues by ID. Invoke multiple times as needed for updated data.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on acceptable input formats, leading to inconsistent recognition of valid prompts.","how_to_avoid":"Specify the exact phrasing or format needed for recognition to ensure consistent success.","description":"No input required; ensure queries use 'ticket ID' format for successful recognition."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comments for a specific issue. Input must be an integer representing the issue number, e.g., `42`. Avoid using words or symbols. Examples: Correct - `42`; Incorrect - `#42`, `issue 42`. Invoke multiple times to verify results.","fields":{"instructions":{"problems_with_current_description":"Current description lacks clarity on required format, leading to invalid input parsing.","how_to_avoid":"Specify that input should be an integer without any additional text or symbols.","description":"Enter the issue number as a standalone integer, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue. Input must start with an integer issue number (no leading zeros or words), followed by two newlines, then your comment. Example: '3\\n\\nPlease update to Java 11.' Validate input format to avoid errors. Invoke multiple times for consistent file system state validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague, leading to format errors in prompts.","how_to_avoid":"Specify the exact format and requirements for input prompts to ensure compliance.","description":"Ensure input follows strict formatting guidelines for successful processing."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetches the full text of all files in a pull request (PR) by specifying the PR number as an integer, e.g., `12`. Avoid prefixes or additional characters. Validate inputs to ensure correct usage. This tool can be invoked multiple times for consistent file state assessment.","fields":{"instructions":{"problems_with_current_description":"The description is ambiguous, leading to incorrect interpretations of how to format the PR number, causing argument failures.","how_to_avoid":"Clearly specify the expected syntax for PR number input, emphasizing it should be a standalone integer.","description":"Input the PR number as a standalone integer without any prefixes or suffixes, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a pull request by providing only the PR number as an unadorned integer (e.g., '12'). Avoid adding text or prefixes. Validate the integer format before use. The tool can be invoked multiple times if needed. Example: 'Provide content for PR 12'.","fields":{"instructions":{"problems_with_current_description":"The current description does not specify the required format, causing ambiguity in input formats and failures.","how_to_avoid":"Clarify the expected input format for the PR number to ensure users provide an integer directly.","description":"Input an integer representing the pull request number, e.g., 12, without any prefixes or text."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create files in a GitHub repo. Input must be a file path (without a leading slash) followed by contents. Example: 'dir/file.txt\\nfile content'. Validate path and content format. Invoke multiple times to check file system state.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on formatting specifics, leading to incorrect instruction parsing.","how_to_avoid":"Provide clear examples and specify exact formatting requirements for instructions.","description":"Ensure instructions follow precise formatting for accurate parsing and execution."}}}
{"name":"Read_File","description":"Read_File: This tool reads file contents from a GitHub repository using the GitHub API. Provide a valid, relative file path within the repository, without starting with a slash, e.g., 'some_dir/my_file.py'. Ensure the path is correct to avoid errors. Can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"Users are providing paths that start with a slash, which is against the requirement in the description.","how_to_avoid":"Clearly state that the path should be relative and not start with a leading slash.","description":"Provide a relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this GitHub API tool to update file contents precisely. Input must include: 1) full file path (no leading slash), 2) old contents in OLD <<<< >>>>OLD, 3) new contents in NEW <<<< >>>>NEW. Validate inputs for correct format. For example, replace 'old text' with 'new text' in test/test.txt: 'test/test.txt OLD <<<< old text >>>> OLD NEW <<<< new text >>>> NEW'. Multiple invocations support better validation.","fields":{"instructions":{"problems_with_current_description":"The current description is too vague, leading to incorrect formatting of file changes.","how_to_avoid":"Clarify the structure for inputting file paths and content changes, specifying required format.","description":"Provide file path and precisely formatted content changes using 'OLD <<<<' and 'NEW <<<<' tags."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete files in a GitHub repository. Provide the full file path without a leading slash. Ensure the path is a simple string, e.g., 'some_dir/my_file.py'. Validate paths and invoke multiple times for consistent results. Example: 'Delete src/java/file.java'.","fields":{"instructions":{"problems_with_current_description":"The description fails to specify the context and format for the prompt, causing confusion in extracting file paths.","how_to_avoid":"Clarify the context and required format, ensuring users understand to provide the path in a specific manner.","description":"Provide the relative file path to delete, without a leading slash, in a clear, specified context."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides an overview of all files in the main branch, listing names, paths, and summaries. It cannot target specific directories. No input is required. Use multiple invocations for detailed validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify when inputs are necessary, leading to confusion in handling prompts.","how_to_avoid":"Specify that the field is for optional instructions, clarifying when to leave it empty.","description":"Optional instructions field; leave empty unless specific guidance is necessary."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in the repository using a direct string input for the branch name (e.g., 'main'). Avoid commands, questions, or additional text. Invoke multiple times if needed to confirm the repository state.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on specifying the exact branch name, leading to ambiguity and incorrect inputs.","how_to_avoid":"Specify that the description should clearly state to provide the exact branch name intended for action.","description":"Specify the exact branch name to switch to, e.g., 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new branch in the repository. Provide only the branch name as a string input, e.g., `create_a_new_branch('my_branch')`. Avoid extra queries or context. The tool can be invoked multiple times for filesystem validation. Examples: `create_a_new_branch('feature_x')`, `create_a_new_branch('bugfix_y')`.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity about formatting, causing misunderstanding in branch naming conventions.","how_to_avoid":"Specify proper branch naming format and examples to guide users in adhering to expected syntax.","description":"Specify the exact branch name format, e.g., 'feature_x', without special characters or spaces."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of all files in a specified directory. Input must be a directory path string, e.g., 'some_dir/inner_dir'. Do not include additional text. Can be invoked multiple times for validation. Examples: 'src/main/java' or 'src/resources/'.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clearly specify the input format, leading to confusion about whether to include directory paths or file names.","how_to_avoid":"Clarify that the input should be only the directory path without any additional instructions or file names.","description":"Provide only the directory path as a string, e.g., 'some_dir/inner_dir', without additional text or file names."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for specific issues and pull requests in a repository. Specify a precise search query as a string, relevant to repository content (e.g., 'bug fix in module X'). Avoid generic questions. Queries can be repeated to reflect changes in the repository.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and can lead to unclear or overly broad queries.","how_to_avoid":"Specify that the query should be concise and directly related to a specific issue or topic.","description":"Enter a concise search query related to a specific issue or topic, e.g., 'Switching challenges to Java 11'."}}}
{"name":"Create_review_request","description":"Create_review_request: This tool creates a review request for an open pull request on the active branch. Specify the exact GitHub username as a string parameter, e.g., 'dev_user'. Validate open pull requests exist before use. The tool can be invoked multiple times for system validation. Examples: 'Request review from dev_user', 'Ask reviewer123 to check the PR'.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly indicate that the username must be provided without any additional instructions or context.","how_to_avoid":"Specify that only the GitHub username should be included, without extra text, to ensure correct parsing and functionality.","description":"Enter only the GitHub username, e.g., `my_username`, without additional text or instructions."}}}
