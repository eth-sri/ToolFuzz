{"name":"Get_Issues","description":"Get_Issues: Retrieves the titles and numbers of 5 issues from a repository. It requires no input. To find specific issues, invoke multiple times and cross-reference manually. Examples: 'List issues' or 'Show repository issues'.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks clarity on the usage or purpose of the field.","how_to_avoid":"Clearly specify that the field should remain empty, indicating no user input is needed.","description":"Leave this field empty; no input is required."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comment thread of a specific issue by specifying its number as an integer (e.g., 42). Avoid extra text or formatting around the number. For accuracy, validate input and invoke multiple times if necessary.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks context about the purpose of the integer.","how_to_avoid":"Clarify the role of the integer and provide an example for better understanding.","description":"Specify the issue number as a whole number, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Comment on a GitHub issue by providing an integer issue number followed by two newlines and your comment. Strictly adhere to this format to avoid errors. Example: '4\\n\\nCheck the new feature thoroughly.' Use sparingly to prevent clutter. Re-invoke for validation.","fields":{"instructions":{"problems_with_current_description":"The current description is too vague and lacks specific guidance.","how_to_avoid":"Provide clear, concise instructions on the required formatting with specific details.","description":"Adhere strictly to specified formatting guidelines."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of all files in a pull request using an integer PR number. Input only the number, e.g., '12', without prefixes or symbols. This tool aids in understanding code changes and can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on what 'PR' refers to.","how_to_avoid":"Specify that 'PR' stands for 'Pull Request' to remove ambiguity.","description":"Enter the Pull Request (PR) number as an integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetches full text of all files in a pull request using a PR number as an integer input (e.g., '12'). Only integer inputs are valid. Invoke tool multiple times for up-to-date results. Examples: 'Fetch PR 12', 'Get files for 15'.","fields":{"instructions":{"problems_with_current_description":"Lacks clarity on what 'PR number' refers to, potentially confusing users.","how_to_avoid":"Specify that it refers to a Pull Request number in version control systems.","description":"The Pull Request (PR) number as an integer, e.g., `12`."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repo. Specify the file path (without a leading slash) followed by contents, separated by a newline. Example: 'path/to/file.txt\\n\\nfile contents'. Validate input format and invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specificity about what formatting is required.","how_to_avoid":"Specify the exact formatting guidelines or standards that need to be followed.","description":"Adhere to specified formatting guidelines precisely."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via GitHub API by providing the full file path without a leading slash, e.g., 'dir/subdir/file.txt'. Validate file paths to avoid errors. The tool supports multiple invocations to verify file system states.","fields":{"instructions":{"problems_with_current_description":"It's verbose and includes unnecessary details.","how_to_avoid":"Use concise language and focus on key requirements.","description":"Specify a relative file path without leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use to update file content in a GitHub repo. Input format: file path (no leading slash), OLD <<<<old content>>>> OLD, NEW <<<<new content>>>> NEW. Validate input before use. Tool can be invoked multiple times for ongoing validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specificity regarding the rules.","how_to_avoid":"Explicitly state the need to adhere to all specified guidelines.","description":"Adhere strictly to all specified guidelines and rules."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file in a GitHub repo by inputting the exact file path as a string without a leading slash (e.g., 'dir/file.py'). Avoid adding contextual sentences. The tool can be invoked multiple times to validate file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about the path format and input type, which could lead to incorrect input.","how_to_avoid":"Clarify the path format and explicitly state the input type to prevent confusion.","description":"Specify the file path without a leading slash, e.g., 'directory/file.ext'. Input as a string."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides an overview of all files in the main branch, listing file names, paths, and summaries of contents. It covers the entire branch, not specific directories. Use it to understand repository structure, and invoke multiple times for comprehensive validation. Examples: 'Overview of main branch,' 'List all files in main branch.'","fields":{"instructions":{"problems_with_current_description":"The description is vague and doesn't clarify the field's purpose.","how_to_avoid":"Provide a concise explanation that clearly states the field's function.","description":"No input needed; leave as an empty string ('')."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Activate a repository branch like `git checkout`. Input only the branch name as a string, e.g., \"my_branch\". Avoid extra text. Ensure the branch exists. Repeat tool use for better state validation.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks clarity on its purpose and scope.","how_to_avoid":"Provide a concise and specific definition of the field's function.","description":"Specify the branch name, such as 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: This tool creates a new repository branch. Input must be a single string specifying the branch name, e.g., 'my_branch'. It can be invoked multiple times for validation. Ensure the format: 'Create_a_new_branch branch_name'. Example: 'Create_a_new_branch update_feature'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity about what 'branch' refers to.","how_to_avoid":"Specify that it refers to a branch name in a version control system.","description":"Specify the version control branch name, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch all files from a specified directory. Input must be a plain string path, e.g., 'some_dir/inner_dir'. Do not include instructions or parameter names. Validate paths for correctness. The tool can be invoked multiple times to verify the file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is ambiguous about what is expected and lacks clarity.","how_to_avoid":"Provide a concise description that clearly specifies the expected input format.","description":"Enter the directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search a repository for issues and pull requests. Provide a concise natural language search query as a string, e.g., 'Bug in login feature'. Avoid vague or non-string inputs. The tool can be invoked multiple times for thorough validation. Ensure queries are specific to improve accuracy.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity about the input format and purpose.","how_to_avoid":"Provide a concise explanation emphasizing input format and purpose.","description":"Enter a natural language search query, like a title or topic of your issue."}}}
{"name":"Create_review_request","description":"Create a review request on the active branch's open pull request by specifying the GitHub username as a string. Format: {'username':'<GitHub_username>'}. Ensure proper input validation. Example: {'username':'dev_reviewer'}. Can be used multiple times for verification.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not emphasize that the input must be a valid GitHub username.","how_to_avoid":"Specify that the input should be a valid GitHub username conforming to GitHub's naming conventions.","description":"Valid GitHub username of the user, following GitHub's naming conventions, e.g., 'my_username'."}}}
