{"name":"Get_Issues","description":"Retrieve a list of 5 issue titles and numbers from the repository. No input is required. Use this tool to get the latest issue details, and invoke it multiple times if necessary for updated results. Example usage: 'Fetch the latest issues.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on how to handle input, leading to confusion and incorrect argument parsing.","how_to_avoid":"Clarify that no input is needed and specify expected output behavior to prevent incorrect parsing.","description":"No input required; expect empty string as default input. Ensure output parsing is set accordingly."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comments of a specific issue by providing only the issue number as an integer (e.g., 42). Avoid using words or symbols like 'issue', '#', or 'number'. The tool can be invoked multiple times for better validation. Examples: 'Get issue 42', 'Fetch details of 7'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity in specifying the format and representation of the issue number.","how_to_avoid":"Clearly define the expected format for issue numbers, ensuring precise guidance on integer input without additional symbols or text.","description":"An integer representing the issue number without any additional characters, e.g., 42"}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Input must start with an integer issue number, followed by two newlines, then the comment. Strictly adhere to this format to avoid errors. Use for precise, formatted comments on GitHub issues. Can be invoked multiple times for validation. Example: '123\\n\\nPlease review the code changes.'","fields":{"instructions":{"problems_with_current_description":"The current description lacks specificity, leading to inconsistent formatting and invocation failures.","how_to_avoid":"Clarify the expected syntax and format for input prompts to prevent invocation errors.","description":"Provide prompts using precise syntax and consistent issue identifiers to ensure successful invocation."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of files in a pull request by providing the PR number as a direct integer input, e.g., 12. Avoid words or symbols before the number. Invoke the tool multiple times if needed to validate file states. Example: To view files in PR 5, input '5'.","fields":{"instructions":{"problems_with_current_description":"The current description is ambiguous and does not clearly specify how to format the PR number for valid input.","how_to_avoid":"Specify that the PR number should only be provided as a raw integer without any other characters or prefixes.","description":"Provide the PR number as a raw integer without any prefixes, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a pull request by providing only the PR number as an integer, e.g., '12'. Avoid prefixes like 'PR', spelled-out numbers, or additional text. Tool can be invoked multiple times for validation. Examples: '6', not 'PR 6'; '15', not 'fifteen'.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify that the PR number should be entered as a plain integer without any prefix.","how_to_avoid":"Specify that the PR number must be inputted as a plain integer, excluding any prefixes like 'PR' or 'pull request'.","description":"Provide the PR number as a plain integer, without prefixes like 'PR' or 'pull request'."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create files in a GitHub repository. Input format: 'filepath\\n\\nfile content' (no leading slash in filepath). Validate input format to prevent errors. Example: 'src/file.txt\\n\\nFile content'. Invoke multiple times for comprehensive validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks specificity, leading to incorrect formatting and invocation failures.","how_to_avoid":"Clearly specify the format and structure required for successful tool usage.","description":"Ensure precise formatting: specify file path, name, and class declaration."}}}
{"name":"Read_File","description":"Read_File: Utilize this tool to read file contents via the GitHub API. Provide the full file path relative to the repo root, without a leading slash, e.g., 'some_dir/my_file.py'. Ensure paths are correct and validated. The tool supports multiple invocations for file system state checks. Proper path formatting is crucial for successful usage.","fields":{"instructions":{"problems_with_current_description":"The current description does not explicitly state that the file extension is required, leading to incorrect file path inputs.","how_to_avoid":"Specify that the file path must include the file name with its extension.","description":"Provide the full file path with the file name and extension, without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update a file in a GitHub repository. Input format: 1) Full file path without a leading slash; 2) Old content wrapped in OLD <<<< and >>>> OLD; 3) New content wrapped in NEW <<<< and >>>> NEW. Example: 'path/to/file\nOLD <<<<\nold content\n>>>> OLD\nNEW <<<<\nnew content\n>>>> NEW'. Validate inputs before execution. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description lacks specificity on format and content needed for successful execution.","how_to_avoid":"Provide a clear format guide for the instructions, including expected keywords and structure.","description":"Adhere strictly to specified format: file path, unchanged text, OLD and NEW delimiters with content."}}}
{"name":"Delete_File","description":"Delete_File: This tool deletes a file in a GitHub repository using the GitHub API. Input the exact file path without a leading slash (e.g., 'some_dir/my_file.py'). Verify paths before submitting. The tool can be invoked multiple times to confirm file deletion.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity, causing users to not provide the expected input format, leading to failures in processing the prompts.","how_to_avoid":"Clarify that the input should be the relative file path within the repository and emphasize excluding a leading slash.","description":"Enter the relative file path to delete, excluding leading slashes, e.g., 'some_dir/my_file.py'. Use only a string, not parameter names."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"Provides a comprehensive overview of all files in the main branch, including names, paths, and summaries. It lists all files without filtering by directories. Avoid specifying subdirectories; this tool does not support directory-specific queries. Invoke multiple times for thorough validation. Examples: 'Overview of all files in the main branch', 'List files in main'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on when input is not needed, leading to incorrect or missing arguments.","how_to_avoid":"Clarify that no additional input is needed when the instructions field is empty.","description":"No input needed; use an empty string for the instructions field."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switches the active branch, similar to `git checkout <branch_name>`. Input must be the exact branch name as a string, e.g., `my_branch`. Avoid using ambiguous terms. The tool can be invoked multiple times for validation. Example: `Set_active_branch('feature_branch_1')`.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about the expected input format and lacks guidance on valid branch names.","how_to_avoid":"Clarify that the input should be the exact name of the branch as used in the repository, ensuring consistency.","description":"Exact branch name as it appears in the repository, e.g., 'my_branch'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Use this tool to create a new branch in the repository. Specify the branch name directly as a string input parameter, e.g., 'feature_branch'. Invoke multiple times if needed to check the file system state. Example: Create_a_new_branch('my_branch').","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on how to correctly specify the branch name, leading to frequent invocation failures.","how_to_avoid":"Provide a detailed and clear guideline on naming conventions and format for the branch name to prevent misinterpretations.","description":"Specify the exact branch name format required, e.g., 'feature_x', without additional prefixes or suffixes."}}}
{"name":"Get_files_from_a_directory","description":"Fetch a list of all files in a specified directory by inputting only the directory path as a string. For example: 'src/main/java'. Avoid additional text. Validate inputs to ensure they're correct. The tool can be invoked multiple times to ensure accurate file system validation.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about what input format is expected, leading to user confusion and incorrect responses.","how_to_avoid":"Clarify the input format by explicitly stating it should be a directory path string without additional context or instructions.","description":"Enter the directory path as a string, e.g., 'some_dir/inner_dir'. Do not include any additional instructions or context."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find issues and pull requests in a repository. Input a precise search query as a string, e.g., 'bug in login feature'. Ensure clarity and specificity. You can invoke this tool multiple times to validate repository state. Avoid generic questions or unrelated topics.","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity on how specific and detailed the query should be, leading to ambiguous inputs.","how_to_avoid":"Specify that queries should be concise, specific questions or topics for effective search results.","description":"Enter a specific, concise question or topic for a natural language search."}}}
{"name":"Create_review_request","description":"Create_review_request: Generates a review request for the open pull request on the current branch. Input must include the GitHub username as a string (e.g., 'my_username'). Ensure an active branch and open pull request exist. Invoke multiple times for state validation. Examples: 'Request a review from \"my_username\" on the current branch.'","fields":{"instructions":{"problems_with_current_description":"The current description fails to specify that valid usernames should follow a certain pattern, leading to misinterpretation and incorrect argument extraction.","how_to_avoid":"Clarify that the username should follow a specific format and provide examples of valid patterns to ensure accurate recognition.","description":"GitHub username following the pattern `name_role`, e.g., `dev_reviewer`, used for review requests."}}}
