{"name":"Get_Issues","description":"Get_Issues: This tool fetches a list of 5 repository issues by returning their titles and numbers. It requires no input and does not support specific issue queries. To verify repository state, invoke the tool multiple times. Usage examples: 'List issues' or 'Fetch issues'.","fields":{"instructions":{"problems_with_current_description":"The current description is unclear, leading to confusion about expected input format, resulting in inconsistent results.","how_to_avoid":"Clarify when no input is needed and specify that an empty string is expected.","description":"No input needed; expect an empty string ('')."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comments of an issue by specifying 'Get_Issue(issue_number: int)'. Ensure the issue number is a standalone integer (e.g., 42). Avoid using words or symbols around the number. May be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't specify the required syntax for input, leading to incorrect or inconsistent issue number formats.","how_to_avoid":"Specify the need for a numeric input without special characters or words, ensuring uniformity and preventing syntax errors.","description":"Provide the issue number as a plain integer, without any prefixes or symbols, e.g., 42."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue. Input format: issue number as an integer, followed by two newlines, then your comment. Ensure no leading zeros or incorrect string formats. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on specific formatting, leading to invocation errors.","how_to_avoid":"Specify exact formatting requirements for issue numbers and comments to prevent errors.","description":"Ensure issue numbers are numeric and comments are formatted correctly."}}}
{"name":"Overview_of_files_included_in_PR","description":"Overview_of_files_included_in_PR: Input the PR number as a standalone integer (e.g., 12) to fetch full text of all files in a pull request. Avoid additional text or symbols. You can invoke the tool multiple times for validation. Example: Provide input as '12', not 'PR #12'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and structure, leading to confusion about the expected format and context of the PR number.","how_to_avoid":"Clearly specify the format and context, emphasizing the need for an integer PR number without additional text or symbols.","description":"Enter the PR number as an integer only, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a PR by inputting the PR number as an integer (e.g., '12'). Ensure no prefixes or additional text are included. The tool can be invoked multiple times for accurate file state validation. Example: For PR number 8, input '8'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on input format, causing confusion between string and integer formats.","how_to_avoid":"Clarify that the PR number should be entered as a plain integer without prefixes or additional text.","description":"Enter the pull request number as a plain integer, e.g., '12'."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repository. Input format: specify the file path (no leading slash), followed by a newline, then the file content. Example: 'path/to/file.txt\\nFile content'. Validate correctness by double-checking the format before submission.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on expected output format, leading to inconsistent results.","how_to_avoid":"Specify exact formatting requirements and examples to guide users in crafting precise instructions.","description":"Provide clear, formatted instructions for file creation tasks to ensure consistent output."}}}
{"name":"Read_File","description":"Read_File: Access GitHub file contents by providing precise file paths. Paths must not start with a slash (e.g., 'some_dir/my_file.py'). Validate paths for correct format. Tool supports multiple invocations for better file system validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify that paths should not start with 'src/'.","how_to_avoid":"Specify that the path must exclude 'src/' as the initial segment.","description":"Enter the file path excluding 'src/' as the initial segment, e.g., 'main/java/com/example/servlets/YourFile.java'."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update a file's contents in a GitHub repository. Specify file path without a starting slash. Enclose old content in OLD <<<< >>>> OLD and new content in NEW <<<< >>>> NEW. Validate paths and content format before submission. Invoke multiple times for state consistency.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on how to format instructions, leading to parsing issues.","how_to_avoid":"Clearly define the expected format for instructions to prevent misunderstandings.","description":"Adhere strictly to the specified format for instructions to ensure accurate processing."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file in a GitHub repository by providing the full file path without a leading slash (e.g., 'some_dir/my_file.py'). Enter only the path as a string. Validate the file path format before use. Repeat invocation if necessary to verify file state.","fields":{"instructions":{"problems_with_current_description":"The current description does not clearly differentiate between file paths and contextual instructions, leading to incorrect argument parsing.","how_to_avoid":"Clarify that only the file path should be provided, with no additional context or phrasing.","description":"Enter the file path to delete, without a leading slash or additional context, e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides a general overview of all files in the main branch, listing names, paths, and brief summaries. It does not support directory-specific queries. Use broad prompts for repository insights. Example: 'What files are in the main branch?' The tool can be invoked multiple times for comprehensive validation.","fields":{"instructions":{"problems_with_current_description":"The current description does not clarify when inputs are necessary, leading to misinterpretation.","how_to_avoid":"Ensure the description explicitly states when no input is needed and provide examples for clarity.","description":"No input required; leave the field as an empty string ('')."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in a repository. Specify the branch name exactly as a string (e.g., 'main', 'feature_x'). Avoid synonyms like 'trunk' or 'primary'. Confirm branch existence before use. Tool can be invoked multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague, leading to inconsistent identification of branch names from prompts.","how_to_avoid":"Clarify the description to specify that it should capture the branch name directly from user prompts.","description":"Extract the exact branch name mentioned in the user prompt, e.g. `my_branch`."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Use this tool to create a branch in a repository by specifying the branch name as a string parameter, e.g., `Create_a_new_branch('my_branch')`. Ensure the input is formatted correctly to avoid errors. The tool can be invoked multiple times to check the file system state.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on what 'branch' refers to in the context of version control, causing confusion in command prompts.","how_to_avoid":"Specify that 'branch' refers to a version control branch name to provide clearer context for users.","description":"Specify the version control branch name, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Fetch file lists from a specified directory by providing a valid directory path as a string (e.g., 'some_dir/inner_dir'). Ensure input is strictly the path without additional text. The tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clearly instruct users to provide only the directory path without additional text or commands.","how_to_avoid":"Specify that only the directory path string should be entered without any extraneous words or commands.","description":"Input only the directory path string, e.g., 'some_dir/inner_dir', without additional text or commands."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find specific issues and pull requests in a repository. Provide a precise string input query related to repository content, e.g., 'Issue: Java 11 migration'. Avoid generic topics. The tool can be invoked multiple times for comprehensive results. Examples: 'Fix bug in login module', 'Pull request: optimize database queries'.","fields":{"instructions":{"problems_with_current_description":"The current description is too vague and doesn't clearly guide the user on formulating effective queries.","how_to_avoid":"Provide a more detailed instruction on crafting queries to improve clarity and relevance.","description":"Enter a clear, specific question or topic to perform a natural language search, e.g., 'Challenges switching to Java 11'."}}}
{"name":"Create_review_request","description":"Create a review request for an open pull request on the active branch by specifying the GitHub username as a string. Use direct commands: e.g., 'create review for username'. Avoid questions or indirect phrases. Tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description doesn't clarify the username format, leading to mismatches with expected patterns and failure to extract correct arguments.","how_to_avoid":"Specify the expected username format, emphasizing lowercase letters, underscores, and no special characters or spaces.","description":"GitHub username using lowercase letters and underscores, e.g., `anna_dev`."}}}
