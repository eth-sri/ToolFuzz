{"name":"Get_Issues","description":"Get_Issues: Fetches titles and numbers of the 5 latest repository issues without input. Invoke multiple times for updated data. Avoid references to specific issue IDs or numbers as input. Example: 'Fetch latest issues.'","fields":{"instructions":{"problems_with_current_description":"The current description is unclear and lacks context for why no input is required.","how_to_avoid":"Clarify the reason for no input requirement and provide context for usage.","description":"No input needed; use an empty string ('') to indicate."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comment thread of a specific issue using an integer issue number. Only these details are supported. Avoid queries about authors, statuses, or related pull requests. Example: Use 'Get_Issue:42' to fetch details for issue #42. Invoke multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity regarding the context of 'issue number'.","how_to_avoid":"Clarify the context and specify the use of the 'issue number' within the tool.","description":"Enter a unique issue identifier as an integer, e.g., `42`."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue. Input must start with an integer representing the issue number, followed by exactly two newlines, and then the comment text. Misformatted input will fail. Invoke multiple times if needed. Example: '10\\n\\nThis is my comment.'","fields":{"instructions":{"problems_with_current_description":"Lacks clarity on specific formatting requirements.","how_to_avoid":"Specify exact formatting guidelines and expectations.","description":"Adhere strictly to specified formatting guidelines."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch the full text of all files in a pull request by providing the PR number as an integer (e.g., '3'). Input must be a standalone integer without additional text. The tool can be invoked multiple times for consistent file system validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and context about the purpose and use of the PR number.","how_to_avoid":"Include more context about what the PR number is used for and ensure clarity.","description":"Specify the pull request (PR) number as an integer, e.g., 12."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetches full text of all files in a pull request by providing the PR number as an integer input, e.g., '12'. Avoid using prefixes like 'PR'. Tool can be invoked multiple times for state validation. Example: 'Fetch files from PR 12.'","fields":{"instructions":{"problems_with_current_description":"The description lacks clarity and context, potentially leading to confusion.","how_to_avoid":"Provide context and specify the purpose of the integer.","description":"Integer representing the pull request number, e.g., 12."}}}
{"name":"Create_File","description":"Create_File: Use this tool to create a file in a GitHub repo. Input must be: <file_path>\\n\\n<file_contents>. Do not start the path with a slash. Validate inputs and use the tool multiple times for better file system state. Example: 'src/newfile.txt\\n\\nHello World!'","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on what formatting is required.","how_to_avoid":"Specify exact formatting guidelines and expectations clearly.","description":"Adhere to specified formatting guidelines precisely."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read a file's contents via the GitHub API. Provide a valid file path without a leading slash, e.g., `some_dir/my_file.py`. Verify file existence before querying. Re-invoke as needed to check file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is verbose and lacks clarity on the path specification.","how_to_avoid":"Use concise language and specify that the path must be relative.","description":"Specify a relative file path without leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this GitHub API wrapper to update file contents. Input must include an absolute file path (no leading slash) and content changes wrapped as OLD <<<< content >>>> OLD and NEW <<<< content >>>> NEW. Validate inputs before execution. Example: 'file.txt OLD <<<< old >>>> OLD NEW <<<< new >>>> NEW'. Invoke multiple times for better validation.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks specificity.","how_to_avoid":"Use clearer language and specify the nature of the rules to be followed.","description":"Adhere precisely to the specified guidelines and rules."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file in a GitHub repo by providing the full file path as a string, without a leading slash (e.g., 'dir/file.py'). Ensure the path is correct. Invoke multiple times if needed to verify repository state.","fields":{"instructions":{"problems_with_current_description":"The current description is wordy and may be confusing regarding path syntax.","how_to_avoid":"Use concise language and clear examples to specify path format requirements.","description":"Enter the file path to delete, excluding a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool provides an overview of all files in the main branch, listing file names, paths, and contents. Avoid specifying directories in queries to ensure correct parsing. Use iteratively for detailed directory insights. Examples: 'Overview of the main branch' or 'Summary of repository contents.'","fields":{"instructions":{"problems_with_current_description":"The current description is unclear about what is expected as input.","how_to_avoid":"Clarify that the field requires an empty string as input.","description":"Enter an empty string as input, e.g., ``."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Set the active branch in the repository. Use exact branch names as string inputs, e.g., 'main'. Avoid additional context or questions. Tool can be used multiple times to ensure accuracy. Example: 'Set_active_branch: instructions: \"feature_branch\"'.","fields":{"instructions":{"problems_with_current_description":"Lacks clarity on the purpose or context of 'branch name'.","how_to_avoid":"Specify the context and purpose of naming the branch.","description":"Specify the branch name for version control, e.g., 'feature_update'."}}}
{"name":"Create_a_new_branch","description":"Create_a_new_branch: Creates a new branch in the repository. Input the branch name as a plain string: `instructions: \"branch_name\"`. Avoid additional text. Example: `instructions: \"feature_update\"`. Invoke multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks clarity on what 'branch' refers to.","how_to_avoid":"Specify that the branch is a version control branch, like in Git.","description":"Specify the version control branch name, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of files in a specified directory. Input must solely be the directory path as a string, e.g., 'some_dir/inner_dir'. Avoid additional text or commands. You can invoke the tool multiple times for better validation.","fields":{"instructions":{"problems_with_current_description":"The current description is overly verbose and includes unnecessary information.","how_to_avoid":"Focus on clarity and conciseness by removing redundant instructions.","description":"Input a directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to search for issues and pull requests in the repository. Enter a precise, existing issue or pull request title/topic as a string. Ensure input is relevant and formatted correctly. Example: `Fix login bug`. The tool supports multiple invocations for improved validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and specificity, making it difficult to understand the purpose of the field.","how_to_avoid":"Use clear and specific language to define the field's purpose and use case.","description":"Enter a natural language query to specify your issue title or topic."}}}
{"name":"Create_review_request","description":"Create_review_request: Generates a review request for a pull request matching the active branch. Specify the GitHub username clearly as a string, e.g., {\"username\":\"my_username\"}. Avoid vague prompts. Can be invoked multiple times for better validation. Example: {\"username\":\"code_checker\",\"instructions\":\"Review the current branch's pull request.\"}","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the purpose of the username.","how_to_avoid":"Clearly specify the usage and context for the GitHub username.","description":"Enter the GitHub username to access user-specific data, e.g., 'my_username'."}}}
