{"name":"Get_Issues","description":"Get_Issues: Fetch the latest 5 issues from a repository, providing their titles and numbers. No input is needed or accepted. Use this tool multiple times to refresh the list. Examples: 'Fetch recent issues' or 'Show latest issues'.","fields":{"instructions":{"problems_with_current_description":"The description is unclear about the purpose and context of the field.","how_to_avoid":"Specify that the field represents an instruction with no input value required.","description":"Field requires no input; leave as an empty string."}}}
{"name":"Get_Issue","description":"Get_Issue: Fetch the title, body, and comment thread of a specific issue by specifying the issue number as an integer (e.g., 42). Only numeric input is accepted. Avoid words or symbols like 'issue', '#', or 'number'. The tool can be invoked multiple times for validation. Example: For issue 42, use '42'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't specify the context of the issue number.","how_to_avoid":"Clarify the context and purpose of the issue number within the system.","description":"Specify the issue number as an integer identifier, e.g., '42'."}}}
{"name":"Comment_on_Issue","description":"Comment_on_Issue: Use this tool to comment on a GitHub issue. Input must start with an integer issue number, followed by two newlines, and then your comment. Ensure proper format: integer issue number, two newlines, comment. Validate inputs to avoid errors. Repeated invocation checks file state. Examples: '10\\n\\nUpdate to Java 11?'","fields":{"instructions":{"problems_with_current_description":"The description is vague and lacks detail on what formatting is required.","how_to_avoid":"Specify the exact formatting requirements to provide clarity.","description":"Ensure adherence to specified formatting guidelines."}}}
{"name":"Overview_of_files_included_in_PR","description":"Fetch full text of files in a pull request using an integer PR number as input. Input must be a standalone integer, e.g., '4'. Avoid adding extra text or symbols. Tool can be invoked repeatedly for validation. Example: For PR number 5, input '5'.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity on what 'PR' refers to and how the integer should be used.","how_to_avoid":"Clarify that 'PR' refers to 'Pull Request' and specify its role or usage context.","description":"The Pull Request number as an integer, e.g., `12`, used for tracking changes."}}}
{"name":"List_Pull_Requests_Files","description":"List_Pull_Requests_Files: Fetch the full text of all files in a pull request by providing the PR number as a standalone integer. Avoid prefixes like 'PR'. Example: '12'. Tool can be invoked multiple times for validation.","fields":{"instructions":{"problems_with_current_description":"The current description lacks clarity and completeness.","how_to_avoid":"Provide a concise and clear explanation detailing the field's purpose.","description":"Specify the pull request number as an integer, e.g., 12."}}}
{"name":"Create_File","description":"Create_File: This tool creates files in GitHub repos via a specific input format: 'file_path\\n\\nfile_content'. Ensure no leading slash in file paths. Example: 'src/file.txt\\n\\nHello'. Invoke multiple times for file system checks.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the required formatting specifics.","how_to_avoid":"Specify the exact formatting guidelines or requirements to ensure clarity.","description":"Adhere to specified formatting guidelines accurately."}}}
{"name":"Read_File","description":"Read_File: Use this tool to read file contents via the GitHub API. Start your command with 'Read:' followed by the file path without leading slashes, e.g., 'Read: some_dir/my_file.py'. Validate input format before execution. Invoke multiple times for state validation.","fields":{"instructions":{"problems_with_current_description":"The current description is verbose and lacks clarity.","how_to_avoid":"Use concise language and directly convey the requirement.","description":"Specify the relative file path without a leading slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Update_File","description":"Update_File: Use this tool to update file contents in a GitHub repo. Input must include: 1) file path (no leading slash), 2) OLD <<<< old content >>>> OLD, 3) NEW <<<< new content >>>> NEW. Validate inputs before execution. Can be invoked multiple times for file state checks.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity.","how_to_avoid":"Use specific language to convey the importance of following the rules.","description":"Adhere strictly to all specified rules without deviation."}}}
{"name":"Delete_File","description":"Delete_File: Use this tool to delete a file from a GitHub repository. Input the full file path only, without a leading slash or parameter names (e.g., 'some_dir/my_file.py'). Validate input paths and invoke the tool multiple times if needed.","fields":{"instructions":{"problems_with_current_description":"The current description is confusing and lacks clarity on input format.","how_to_avoid":"Clearly state input requirements and format without ambiguity.","description":"Enter the relative file path to delete, starting without a slash, e.g., 'some_dir/my_file.py'."}}}
{"name":"Overview_of_existing_files_in_Main_branch","description":"This tool lists all files in the main branch of a repository, detailing names, paths, and content summaries. Input a specific directory path to receive targeted insights. For accurate results, frame queries clearly and use the tool multiple times for validation. Examples: 'List files in src/main/java' or 'Overview of src directory.'","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks clarity on the purpose and usage of the field.","how_to_avoid":"Provide a concise explanation indicating the field's purpose and expected input format.","description":"No input needed; leave the field as an empty string."}}}
{"name":"Set_active_branch","description":"Set_active_branch: Switch the active branch in the repository by specifying the branch name as a string, e.g., 'feature_branch'. Avoid extra words or commands. Tool can be invoked multiple times for state validation. Examples: 'feature_branch', 'main'.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and lacks context about its usage.","how_to_avoid":"Provide a concise, context-rich explanation of what the field represents.","description":"Specify the branch name to identify the code version, e.g., `my_branch`."}}}
{"name":"Create_a_new_branch","description":"Create a new branch in the repository by providing the branch name as a direct string input (e.g., 'my_branch'). Do not include additional text. Validate input format and use the tool multiple times for verification.","fields":{"instructions":{"problems_with_current_description":"The current description is vague and does not specify the purpose or usage of the field.","how_to_avoid":"Clarify the usage context by specifying it stores the branch name in a version control system.","description":"Specifies the branch name in a version control system, e.g., 'my_branch'."}}}
{"name":"Get_files_from_a_directory","description":"Get_files_from_a_directory: Fetch a list of all files in a specified directory. Provide only the directory path as a string, e.g., 'some_dir/inner_dir'. Avoid extra text or instructions. Validate paths beforehand. The tool can be invoked multiple times to confirm file system state.","fields":{"instructions":{"problems_with_current_description":"The current description is verbose and includes unnecessary details, potentially confusing users.","how_to_avoid":"Simplify the description by focusing only on the essential action required from the user.","description":"Enter a directory path as a string, e.g., 'some_dir/inner_dir'."}}}
{"name":"Search_issues_and_pull_requests","description":"Search_issues_and_pull_requests: Use this tool to find repository issues or pull requests. Provide a precise string query relevant to the repository context, e.g., 'issue: Java 11 migration'. Queries must be clear and specific. The tool can be invoked multiple times to ensure accurate results.","fields":{"instructions":{"problems_with_current_description":"The description is vague, lacking clarity on what input format is required.","how_to_avoid":"Specify the expected input format and purpose more clearly.","description":"Provide a natural language search query, such as an issue title or topic."}}}
{"name":"Create_review_request","description":"Create a review request for an open pull request on the current branch by specifying the GitHub username as a string parameter. Ensure the username corresponds to a valid GitHub account. The tool can be invoked multiple times to validate the request. Examples: {'username':'my_username'}","fields":{"instructions":{"problems_with_current_description":"The current description is vague and doesn't specify that it requires a valid GitHub username format.","how_to_avoid":"Make it clear that the input should strictly be a valid GitHub username.","description":"Enter the valid GitHub username of the target user, e.g., 'my_username'."}}}
